{"version":3,"sources":["webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/NextPrevious/NextPreviousStyles.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/NextPrevious/NextPrevious.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/NextPrevious/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack:///./node_modules/gatsby-theme-carbon/src/templates/Default.js","webpack:///./src/pages/cli/index.mdx"],"names":["PageHeader","title","tabs","className","cx","pageHeader","withTabs","length","id","text","EditLink","relativePagePath","repositoryProp","repository","site","siteMetadata","baseUrl","subDirectory","href","branch","row","link","NextPreviousContainer","previousItem","nextItem","wrapper","linkContainer","to","firstLink","direction","name","secondLink","useNavigationList","edges","allNavItemsYaml","pathPrefix","flatMap","node","pages","map","page","category","getName","NextPrevious","props","location","pageContext","frontmatter","navigationList","currentTitle","slugify","lower","getTitle","hrefSegments","pathname","replace","split","filter","Boolean","currentPage","prevTabItem","nextTabItem","tabItems","slug","currentTab","item","toString","currentTabIndex","findIndex","tab","getTabItems","unPrefixedPathname","currentNavigationItem","navIndex","path","includes","prevCategory","nextCategory","useNavigationItems","slice","join","PageTabs","render","this","pageTabs","slugifiedTab","selected","currentTabRegex","RegExp","key","selectedItem","listItem","tabsContainer","list","React","Component","Default","children","Title","titleType","theme","description","keywords","Layout","homepage","pageTitle","pageDescription","pageKeywords","label","Main","padded","BackToTopBtn","_frontmatter","makeShortcode","console","warn","PageDescription","Metadata","AnchorLinks","AnchorLink","DoDontRow","DoDont","InlineNotification","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","prop","type","color","captionTitle","caption","doDontCode","kind","mono","isMDXComponent"],"mappings":"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","file":"component---src-pages-cli-index-mdx-42a042e8cd494c473e33.js","sourcesContent":["import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { pageHeader, withTabs, text } from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, tabs = [] }) => (\n  <div className={cx(pageHeader, { [withTabs]: tabs.length })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport cx from 'classnames';\n\nimport {\n  wrapper,\n  link,\n  direction,\n  name,\n  firstLink,\n  secondLink,\n  linkContainer,\n} from './NextPrevious.module.scss';\n\nconst NextPreviousContainer = ({ previousItem, nextItem }) => (\n  <div className={wrapper}>\n    <div className={linkContainer}>\n      {previousItem.to && (\n        <Link className={cx(link, firstLink)} to={previousItem.to}>\n          <div className={direction}>Previous</div>\n          <div className={name}>{previousItem.name}</div>\n        </Link>\n      )}\n      {nextItem.to && (\n        <Link className={cx(link, secondLink)} to={nextItem.to}>\n          <div className={direction}>Next</div>\n          <div className={name}>{nextItem.name}</div>\n        </Link>\n      )}\n    </div>\n  </div>\n);\n\nexport default NextPreviousContainer;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport slugify from 'slugify';\n\nimport NextPrevious from './NextPreviousStyles';\n\nconst useNavigationList = () => {\n  const {\n    allNavItemsYaml: { edges },\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query NAV_ITEM_QUERY {\n      allNavItemsYaml {\n        edges {\n          node {\n            title\n            pages {\n              title\n              path\n            }\n          }\n        }\n      }\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  return [\n    edges.flatMap(({ node }) =>\n      node.pages.map(page => ({\n        ...page,\n        category: node.title,\n      }))\n    ),\n    pathPrefix,\n  ];\n};\n\nconst getTabItems = ({ tabs, location }) => {\n  const { pathname } = location;\n  const currentPage = pathname.split('/');\n  if (!tabs) {\n    return {\n      prevTabItem: null,\n      nextTabItem: null,\n    };\n  }\n\n  const tabItems = tabs.map(title => {\n    const slug = slugify(title, {\n      lower: true,\n    });\n    const currentTab =\n      currentPage.filter(item => item === slug).toString() === slug;\n    return {\n      title,\n      slug,\n      currentTab,\n    };\n  });\n\n  const currentTabIndex = tabItems.findIndex(tab => tab.currentTab);\n  return {\n    prevTabItem: tabItems[currentTabIndex - 1],\n    nextTabItem: tabItems[currentTabIndex + 1],\n  };\n};\n\nconst useNavigationItems = ({ tabs, location }) => {\n  const [navigationList, pathPrefix] = useNavigationList();\n  const { pathname } = location;\n  const unPrefixedPathname = pathname.replace(pathPrefix, '');\n  const currentNavigationItem = tabs\n    ? unPrefixedPathname.replace(/\\/[^/]*\\/?$/, '') // removes the last url segment\n    : unPrefixedPathname.replace(/\\/$/, ''); // removes the last syalash\n\n  const navIndex = navigationList.findIndex(item =>\n    item.path.includes(currentNavigationItem)\n  );\n\n  return {\n    prevCategory: navigationList[navIndex - 1],\n    nextCategory: navigationList[navIndex + 1],\n    navIndex,\n  };\n};\n\nconst getTitle = pageContext => {\n  if (!pageContext.frontmatter.title) {\n    return 'Home';\n  }\n  return slugify(pageContext.frontmatter.title, {\n    lower: true,\n  });\n};\n\nconst getName = (category, title) => `${category}${title ? `: ${title}` : ''}`;\n\nconst NextPreviousContainer = props => {\n  const {\n    tabs,\n    location,\n    pageContext = {\n      frontmatter: 'Home',\n    },\n  } = props;\n  const [navigationList, pathPrefix] = useNavigationList();\n  const currentTitle = getTitle(pageContext);\n  const hrefSegments = location.pathname\n    .replace(pathPrefix, '')\n    .split('/')\n    .filter(Boolean);\n\n  const { prevTabItem, nextTabItem } = getTabItems({\n    currentTitle,\n    location,\n    tabs,\n  });\n\n  const { prevCategory, nextCategory, navIndex } = useNavigationItems({\n    location,\n    tabs,\n  });\n\n  const getPreviousItem = () => {\n    if (prevTabItem) {\n      const previousSegments = [...hrefSegments.slice(0, -1), prevTabItem.slug];\n      return {\n        // Join the link back together\n        to: `/${previousSegments.join('/')}`,\n        name: getName(\n          navigationList[navIndex].title || navigationList[navIndex].category,\n          prevTabItem.title\n        ),\n      };\n    }\n\n    if (prevCategory) {\n      return {\n        to: prevCategory.path,\n        name: getName(prevCategory.category, prevCategory.title),\n      };\n    }\n\n    return currentTitle === 'Home'\n      ? {}\n      : {\n          to: '/',\n          name: 'Home',\n        };\n  };\n\n  const getNextItem = () => {\n    if (currentTitle === 'Home') {\n      return {\n        to: navigationList[navIndex].path,\n        name: getName(\n          navigationList[navIndex].category,\n          navigationList[navIndex].title\n        ),\n      };\n    }\n\n    if (nextTabItem && nextTabItem.slug) {\n      const nextSegments = [...hrefSegments.slice(0, -1), nextTabItem.slug];\n      return {\n        to: `/${nextSegments.join('/')}`,\n        name: getName(\n          navigationList[navIndex].title || navigationList[navIndex].category,\n          nextTabItem.title\n        ),\n      };\n    }\n\n    if (nextCategory) {\n      return {\n        to: nextCategory.path,\n        name: getName(nextCategory.category, nextCategory.title),\n      };\n    }\n\n    return {}; // final page\n  };\n\n  if (currentTitle !== 'Home' && !navigationList[navIndex]) {\n    return null;\n  }\n\n  return (\n    <NextPrevious previousItem={getPreviousItem()} nextItem={getNextItem()} />\n  );\n};\n\nexport default NextPreviousContainer;\n","import NextPrevious from './NextPrevious';\n\nexport default NextPrevious;\n","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  static propTypes = {\n    tabs: PropTypes.array,\n    slug: PropTypes.string,\n  };\n\n  render() {\n    const { tabs, slug } = this.props;\n    const currentTab = slug\n      .split('/')\n      .filter(Boolean)\n      .slice(-1)[0];\n\n    const pageTabs = tabs.map(tab => {\n      const slugifiedTab = slugify(tab, { lower: true });\n      const selected = slugifiedTab === currentTab;\n      const currentTabRegex = new RegExp(`${currentTab}(?!-)`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport BackToTopBtn from '../components/BackToTopBtn';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const { tabs, title, theme, description, keywords } = frontmatter;\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return slug.split('/').slice(-1)[0] || slugify(tabs[0], { lower: true });\n  };\n\n  const currentTab = getCurrentTab();\n  return (\n    <Layout\n      tabs={tabs}\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}\n    >\n      <PageHeader title={Title ? <Title /> : title} label=\"label\" tabs={tabs} />\n      {tabs && <PageTabs slug={slug} tabs={tabs} currentTab={currentTab} />}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <BackToTopBtn />\n    </Layout>\n  );\n};\n\nexport default Default;\n","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/boneskull/projects/boneskull/report-toolkit/packages/docs/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nimport { panel } from 'gatsby-theme-carbon/src/components/Tabs/Tabs.module.scss';\nimport { InlineCode } from '../../components';\nimport { doDontCode, mono } from './index.module.scss';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst Metadata = makeShortcode(\"Metadata\");\nconst AnchorLinks = makeShortcode(\"AnchorLinks\");\nconst AnchorLink = makeShortcode(\"AnchorLink\");\nconst DoDontRow = makeShortcode(\"DoDontRow\");\nconst DoDont = makeShortcode(\"DoDont\");\nconst InlineNotification = makeShortcode(\"InlineNotification\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    {\n      /* note: if your paragraph contains markdown, it must not start with a component; this is\n      why we see strong (`**`) in some places where otherwise it would not be needed */\n    }\n    <PageDescription mdxType=\"PageDescription\">\n      <p><strong parentName=\"p\"><Metadata prop=\"packageName\" mdxType=\"Metadata\" /></strong>{` provides a command-line utility, `}<Metadata prop=\"executable\" mdxType=\"Metadata\" />{`. This usage documentation provides detailed descriptions of all `}<em parentName=\"p\">{`commands`}</em>{` and options for `}<Metadata prop=\"executable\" mdxType=\"Metadata\" />{`.`}</p>\n    </PageDescription>\n    <AnchorLinks mdxType=\"AnchorLinks\">\n  <AnchorLink mdxType=\"AnchorLink\">General Usage Guidelines</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Global Options</AnchorLink>\n  <AnchorLink to=\"#the-diff-command\" mdxType=\"AnchorLink\">\n    The <InlineCode mdxType=\"InlineCode\">diff</InlineCode> Command\n  </AnchorLink>\n  <AnchorLink to=\"#the-inspect-command\" mdxType=\"AnchorLink\">\n    The <InlineCode mdxType=\"InlineCode\">inspect</InlineCode> Command\n  </AnchorLink>\n  <AnchorLink to=\"#the-redact-command\" mdxType=\"AnchorLink\">\n    The <InlineCode mdxType=\"InlineCode\">redact</InlineCode> Command\n  </AnchorLink>\n  <AnchorLink to=\"#the-transform-command\" mdxType=\"AnchorLink\">\n    The <InlineCode mdxType=\"InlineCode\">transform</InlineCode> Command\n  </AnchorLink>\n  <AnchorLink to=\"#common-output-options\" mdxType=\"AnchorLink\">Common Output Options</AnchorLink>\n  <AnchorLink to=\"#transformer-specific-options\" mdxType=\"AnchorLink\">\n    Transformer-Specific Options\n  </AnchorLink>\n    </AnchorLinks>\n    <h2>{`General Usage Guidelines`}</h2>\n    <h3><Metadata prop=\"executable\" mdxType=\"Metadata\" />{` Requires a Command`}</h3>\n    <p>{`You must supply a `}<em parentName=\"p\">{`command`}</em>{` to `}<Metadata prop=\"executable\" mdxType=\"Metadata\" />{`. A `}<em parentName=\"p\">{`single`}</em>{` command must immediately follow the `}<Metadata prop=\"executable\" mdxType=\"Metadata\" />{` executable.`}</p>\n    <DoDontRow mdxType=\"DoDontRow\">\n  <DoDont type=\"do\" color=\"dark\" captionTitle=\"Correct Usage\" caption=\"Command is first argument\" text=\"rtk redact report-file.json\" className={doDontCode} mdxType=\"DoDont\" />\n  <DoDont type=\"dont\" color=\"dark\" captionTitle=\"Incorrect Usage\" caption=\"Command in wrong position\" text=\"rtk report-file.json redact\" className={doDontCode} mdxType=\"DoDont\" />\n    </DoDontRow>\n    <h3>{`Available Commands`}</h3>\n    <p>{`The command must be one of the following:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#the-diff-command\"\n        }}><inlineCode parentName=\"a\">{`diff`}</inlineCode></a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#the-inspect-command\"\n        }}><inlineCode parentName=\"a\">{`inspect`}</inlineCode></a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#the-redact-command\"\n        }}><inlineCode parentName=\"a\">{`redact`}</inlineCode></a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#the-transform-command\"\n        }}><inlineCode parentName=\"a\">{`transform`}</inlineCode></a></li>\n    </ul>\n    <InlineNotification kind=\"info\" mdxType=\"InlineNotification\">\n      <p><em parentName=\"p\">{`As of v0.5.1`}</em>{`, the `}<inlineCode parentName=\"p\">{`list-rules`}</inlineCode>{` command (for the time being; see `}<a parentName=\"p\" {...{\n          \"href\": \"https://github.com/IBM/report-toolkit/issues/80\"\n        }}>{`#80`}</a>{`) will output the built-in rules for `}<a parentName=\"p\" {...{\n          \"href\": \"#the-inspect-command\"\n        }}><inlineCode parentName=\"a\">{`inspect`}</inlineCode></a>{` and their descriptions.`}</p>\n    </InlineNotification>\n    <h3>{`About Flags`}</h3>\n    <p>{`Any “boolean” flag—an option without an argument—can be explicitly disabled by prepending `}<inlineCode parentName=\"p\">{`--no-`}</inlineCode>{` to the option name. For example, to explicitly disable color output when comparing `}<inlineCode parentName=\"p\">{`report-A.json`}</inlineCode>{` to `}<inlineCode parentName=\"p\">{`report-B.json`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`rtk --no-color diff report-A.json report-B.json\n`}</code></pre>\n    <p>{`This is applicable to both `}<a parentName=\"p\" {...{\n        \"href\": \"#global-options\"\n      }}>{`global`}</a>{` and command-specific boolean flags.`}</p>\n    <h3>{`About Configuration`}</h3>\n    <p>{`Configuration will be read from a JavaScript file named `}<inlineCode parentName=\"p\">{`.rtkrc.js`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`rtk.config.js`}</inlineCode>{`. If one is not found in the current working directory, the search for one of these files will continue until one is found, the current user’s “home” directory is found, or the root of the filesystem is found (see `}<a parentName=\"p\" {...{\n        \"href\": \"https://npm.im/cosmiconfig\"\n      }}>{`cosmiconfig`}</a>{` for further details on the file-finding algorithm).`}</p>\n    <InlineNotification kind=\"warning\" mdxType=\"InlineNotification\">\n      <p><em parentName=\"p\">{`As of v0.5.1`}</em>{`, only CommonJS-style `}<inlineCode parentName=\"p\">{`.js`}</inlineCode>{` is allowed; the config file must use `}<inlineCode parentName=\"p\">{`module.exports`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`exports`}</inlineCode>{`, and cannot be an ECMAScript module.`}</p>\n    </InlineNotification>\n    <p>{`Other formats, including JSON, YAML, TOML, etc., are explicitly `}<em parentName=\"p\">{`not`}</em>{` supported. Configuration cannot be stored in a `}<inlineCode parentName=\"p\">{`package.json`}</inlineCode>{`, either. Sorry!`}</p>\n    <p><em parentName=\"p\">{`TODO: Write configuration docs and link to them; see `}<a parentName=\"em\" {...{\n          \"href\": \"https://github.com/IBM/report-toolkit/issues/66\"\n        }}>{`#66`}</a></em></p>\n    <h2>{`Global Options`}</h2>\n    <p>{`These options can be used in tandem with any command.`}</p>\n    <p>{`In the case of `}<inlineCode parentName=\"p\">{`--help`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`--version`}</inlineCode>{`, no command is required.`}</p>\n    <h3><inlineCode parentName=\"h3\">{`--rc </path/to/.rtkrc.js>`}</inlineCode></h3>\n    <p>{`Supply an explicit path to a `}<Metadata prop=\"packageName\" mdxType=\"Metadata\" />{` config file. This option is only necessary if your config file has non-standard location and/or name.`}</p>\n    <h4>{`Example: Run `}<inlineCode parentName=\"h4\">{`inspect`}</inlineCode>{` Using Config `}<inlineCode parentName=\"h4\">{`my-config.js`}</inlineCode></h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`rtk --rc my-config.js inspect report-A.json\n`}</code></pre>\n    <p>{`The same restrictions as described above in `}<a parentName=\"p\" {...{\n        \"href\": \"#about-configuration\"\n      }}>{`About Configuration`}</a>{` apply.`}</p>\n    <h3><inlineCode parentName=\"h3\">{`--color`}</inlineCode>{` / `}<inlineCode parentName=\"h3\">{`--no-color`}</inlineCode></h3>\n    <p>{`Color output is enabled `}<a parentName=\"p\" {...{\n        \"href\": \"#defaults-of-diff\"\n      }}>{`by default`}</a>{` when a TTY is available. If there is no TTY (like in a subprocess, or when piped), specify `}<inlineCode parentName=\"p\">{`--color`}</inlineCode>{` to force color.`}</p>\n    <InlineNotification kind=\"warning\" mdxType=\"InlineNotification\">\n      <p>{`Some transformations do not support color output (e.g., `}<inlineCode parentName=\"p\">{`csv`}</inlineCode>{`), and `}<inlineCode parentName=\"p\">{`--color`}</inlineCode>{` will be ignored. In `}<Metadata prop=\"executable\" mdxType=\"Metadata\" />{`, color is intended for human-readable output.`}</p>\n    </InlineNotification>\n    <h4>{`Example: Force Color Output When Comparing `}<inlineCode parentName=\"h4\">{`report-A.json`}</inlineCode>{` and `}<inlineCode parentName=\"h4\">{`report-B.json`}</inlineCode></h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`rtk diff --color report-A.json report-B.json\n`}</code></pre>\n    <h4>{`Example: Disable Color Output When Inspecting `}<inlineCode parentName=\"h4\">{`report.json`}</inlineCode></h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`rtk inspect --no-color report.json\n`}</code></pre>\n    <h3><inlineCode parentName=\"h3\">{`--debug`}</inlineCode>{` / `}<inlineCode parentName=\"h3\">{`--verbose`}</inlineCode></h3>\n    <p>{`Enables debug output. `}<inlineCode parentName=\"p\">{`--verbose`}</inlineCode>{` is an alias of `}<inlineCode parentName=\"p\">{`--debug`}</inlineCode>{`; their behavior is identical.`}</p>\n    <p>{`This can be noisy.`}</p>\n    <p>{`Using `}<inlineCode parentName=\"p\">{`--debug`}</inlineCode>{` is equivalent to setting the environment variable `}<inlineCode parentName=\"p\">{`DEBUG=rtk*`}</inlineCode>{`. Further granularity can be achieved by appending package or module name(s) separated by colons, e.g., `}<inlineCode parentName=\"p\">{`DEBUG=rtk:cli*`}</inlineCode>{` will show all debug output from the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/IBM/report-toolkit/tree/master/packages/cli\"\n      }}>{`CLI package`}</a>{`. Package names follow a pattern of `}<inlineCode parentName=\"p\">{`rtk:<package name>[:..submodule name or path]`}</inlineCode>{`.`}</p>\n    <p>{`Debug output is sent to `}<inlineCode parentName=\"p\">{`STDERR`}</inlineCode>{`.`}</p>\n    <InlineNotification kind=\"info\" mdxType=\"InlineNotification\">\n      <p>{`See the documentation of the `}<a parentName=\"p\" {...{\n          \"href\": \"https://github.com/visionmedia/debug#readme\"\n        }}>{`debug`}</a>{` package for more about controlling its behavior via the `}<inlineCode parentName=\"p\">{`DEBUG`}</inlineCode>{` environment variable.`}</p>\n    </InlineNotification>\n    <h3><inlineCode parentName=\"h3\">{`--help`}</inlineCode></h3>\n    <p>{`Displays help text, then exits. `}<inlineCode parentName=\"p\">{`--help`}</inlineCode>{` can be used by itself (to see global\noptions and the list of commands), or combined with any command to see command-specific options.`}</p>\n    <h4>{`Example: Print Help Text`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`rtk --help\n`}</code></pre>\n    <h4>{`Example: Print Help Text for `}<inlineCode parentName=\"h4\">{`inspect`}</inlineCode>{` Command`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`rtk inspect --help\n`}</code></pre>\n    <h3><inlineCode parentName=\"h3\">{`--version`}</inlineCode></h3>\n    <p>{`Outputs the version of `}<Metadata prop=\"executable\" mdxType=\"Metadata\" />{` to `}<inlineCode parentName=\"p\">{`STDOUT`}</inlineCode>{` then exits.`}</p>\n    <h4>{`Example: Print Version of Installed `}<inlineCode parentName=\"h4\">{`rtk`}</inlineCode>{` Executable`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`rtk --version\n`}</code></pre>\n    <h2>{`The `}<inlineCode parentName=\"h2\">{`diff`}</inlineCode>{` Command`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`diff`}</inlineCode>{` command compares two (2) Diagnostic Report files and outputs the difference. Unlike a typical `}<inlineCode parentName=\"p\">{`diff`}</inlineCode>{` tool, the output is purpose-built for comparing reports.`}</p>\n    <h3>{`Basic Usage: `}<inlineCode parentName=\"h3\">{`rtk diff <file-A> <file-B>`}</inlineCode></h3>\n    <p>{`To use `}<inlineCode parentName=\"p\">{`diff`}</inlineCode>{` with the `}<a parentName=\"p\" {...{\n        \"href\": \"#defaults-of-diff\"\n      }}>{`defaults`}</a>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`rtk diff report-A.json report-B.json\n`}</code></pre>\n    <p><inlineCode parentName=\"p\">{`diff`}</inlineCode>{` requires two (2) paths to Diagnostic Report files.`}</p>\n    <h3><inlineCode parentName=\"h3\">{`diff`}</inlineCode>{`: Output Description`}</h3>\n    <p>{`The output of `}<inlineCode parentName=\"p\">{`diff`}</inlineCode>{` contains four (4) fields:`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Op`}</strong>{`: Shorthand for “operation”:`}<ul parentName=\"li\">\n          <li parentName=\"ul\"><strong parentName=\"li\">{`(M)odified`}</strong>{`: The field exists in both reports, but differs`}</li>\n          <li parentName=\"ul\"><strong parentName=\"li\">{`(A)dded`}</strong>{`: The field exists in the `}<em parentName=\"li\">{`first`}</em>{` report only`}</li>\n          <li parentName=\"ul\"><strong parentName=\"li\">{`(D)eleted`}</strong>{`: The field exists in the `}<em parentName=\"li\">{`second`}</em>{` report only`}</li>\n        </ul></li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Field`}</strong>{`: The field path which differs, represented in “dot” notation.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\"><em parentName=\"strong\">{`(path to first report)`}</em></strong>{`: The value in the field of the first report (if present)`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\"><em parentName=\"strong\">{`(path to second report)`}</em></strong>{`: The value in the field of the second report (if present)`}</li>\n    </ul>\n    <p>{`In the default, tabular output, each “Op” and “Field” pair will be color-coded based on its operation. “Modified” is yellow, “deleted” is red, and “added” is green.`}</p>\n    <p>{`Unlike other commands, the output of `}<inlineCode parentName=\"p\">{`diff`}</inlineCode>{` depends on the order of the two files given; the results will be the same, but reversed.`}</p>\n    <h3><inlineCode parentName=\"h3\">{`diff`}</inlineCode>{`: Defaults`}</h3>\n    <p>{`This section describes the default behavior of `}<inlineCode parentName=\"p\">{`rtk diff`}</inlineCode>{`.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Output: a human-readable, `}<strong parentName=\"li\">{`tabular view`}</strong>{` (in color, where available)`}</li>\n      <li parentName=\"ul\">{`Secrets are `}<strong parentName=\"li\">{`redacted`}</strong>{` from Diagnostic Reports `}<em parentName=\"li\">{`before`}</em>{` comparison`}</li>\n      <li parentName=\"ul\">{`To increase the signal-to-noise ratio, `}<inlineCode parentName=\"li\">{`diff`}</inlineCode>{` `}<strong parentName=\"li\">{`includes only this following set of fields`}</strong>{`:`}<ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`header`}</inlineCode></li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`environmentVariables`}</inlineCode></li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`userLimits`}</inlineCode></li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`sharedObejcts`}</inlineCode></li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`libuv`}</inlineCode></li>\n        </ul></li>\n      <li parentName=\"ul\">{`Furthermore, these nested fields are `}<strong parentName=\"li\">{`excluded from the `}<inlineCode parentName=\"strong\">{`header`}</inlineCode>{` field`}</strong>{`:`}<ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`header.filename`}</inlineCode></li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`header.dumpEventTime`}</inlineCode></li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`header.dumpEventTimeStamp`}</inlineCode></li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`header.cpus`}</inlineCode></li>\n        </ul></li>\n    </ul>\n    <h3><inlineCode parentName=\"h3\">{`diff`}</inlineCode>{`-specific Options`}</h3>\n    <p>{`This group of options allows the user to fine-tune which fields (properties) `}<inlineCode parentName=\"p\">{`rtk diff`}</inlineCode>{` considers when comparing report files.`}</p>\n    <InlineNotification kind=\"warning\" mdxType=\"InlineNotification\">\n      <p>{`When using these options, please note that `}<em parentName=\"p\">{`exclusion`}</em>{` of fields `}<strong parentName=\"p\">{`takes precedence`}</strong>{` over `}<em parentName=\"p\">{`inclusion`}</em>{` of fields. In other words: include fields `}<em parentName=\"p\">{`first`}</em>{`, `}<em parentName=\"p\">{`then`}</em>{` exclude from your list. In this way, you can include a top level field (like `}<inlineCode parentName=\"p\">{`header`}</inlineCode>{`), then exclude a nested field (like `}<inlineCode parentName=\"p\">{`header.processId`}</inlineCode>{`). For example, `}<inlineCode parentName=\"p\">{`rtk diff -i header -x header.processId report-A.json report-B.json`}</inlineCode>{` will compare `}<inlineCode parentName=\"p\">{`header`}</inlineCode>{`, but not its nested property, `}<inlineCode parentName=\"p\">{`header.processId`}</inlineCode>{`.`}</p>\n    </InlineNotification>\n    <h3><inlineCode parentName=\"h3\">{`diff`}</inlineCode>{`: Options`}</h3>\n    <h4><inlineCode parentName=\"h4\">{`--includeProp <field>, -i <field>`}</inlineCode></h4>\n    <p>{`Explicitly `}<em parentName=\"p\">{`include`}</em>{` one or more fields in the comparison. If this option is used, `}<Metadata prop=\"executable\" mdxType=\"Metadata\" />{` will `}<em parentName=\"p\">{`only`}</em>{` consider the field(s) specified (and any nested fields or array items).`}</p>\n    <p>{`This option can be used multiple times.`}</p>\n    <h5>{`Example: Include a Single Field`}</h5>\n    <p>{`To `}<em parentName=\"p\">{`only`}</em>{` compare field `}<inlineCode parentName=\"p\">{`header`}</inlineCode>{` (and its nested fields) when comparing `}<inlineCode parentName=\"p\">{`report-A.json`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`report-B.json`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`rtk diff --includeProp header report-A.json report-B.json\n`}</code></pre>\n    <h5>{`Example: Include Multiple fields`}</h5>\n    <p>{`To `}<em parentName=\"p\">{`only`}</em>{` compare fields `}<inlineCode parentName=\"p\">{`header.commandLine`}</inlineCode>{` (and its items) and `}<inlineCode parentName=\"p\">{`header.cwd`}</inlineCode>{` when comparing `}<inlineCode parentName=\"p\">{`report-A.json`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`report-B.json`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`rtk diff -i header.commandLine -i header.cwd report-A.json report-B.json\n`}</code></pre>\n    <h4><inlineCode parentName=\"h4\">{`--excludeProp <field>, -x <field>`}</inlineCode></h4>\n    <p>{`Explicitly `}<em parentName=\"p\">{`exclude`}</em>{` one or more fields in the comparison. If this option is used, `}<Metadata prop=\"executable\" mdxType=\"Metadata\" />{` will consider the `}<a parentName=\"p\" {...{\n        \"href\": \"#defaults-of-diff\"\n      }}>{`defaults`}</a>{`, then further exclude the specified fields.`}</p>\n    <p>{`This option can be used multiple times.`}</p>\n    <h5>{`Example: Exclude a Single Field`}</h5>\n    <p>{`To exclude field `}<inlineCode parentName=\"p\">{`header`}</inlineCode>{` (and its nested fields) when comparing `}<inlineCode parentName=\"p\">{`report-A.json`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`report-B.json`}</inlineCode>{` (but otherwise use `}<a parentName=\"p\" {...{\n        \"href\": \"#defaults-of-diff\"\n      }}>{`the defaults`}</a>{`):`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`rtk diff --excludeProp header report-A.json report-B.json\n`}</code></pre>\n    <h5>{`Example: Exclude Multiple Fields`}</h5>\n    <p>{`To exclude fields `}<inlineCode parentName=\"p\">{`header.commandLine`}</inlineCode>{` (and its items) and `}<inlineCode parentName=\"p\">{`header.cwd`}</inlineCode>{` when comparing `}<inlineCode parentName=\"p\">{`report-A.json`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`report-B.json`}</inlineCode>{` (but otherwise use `}<a parentName=\"p\" {...{\n        \"href\": \"#defaults-of-diff\"\n      }}>{`the defaults`}</a>{`):`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`rtk diff -x header.commandLine -x header.cwd report-A.json report-B.json\n`}</code></pre>\n    <h4><inlineCode parentName=\"h4\">{`--all`}</inlineCode></h4>\n    <p>{`By default, `}<Metadata prop=\"executable\" mdxType=\"Metadata\" />{` `}<a parentName=\"p\" {...{\n        \"href\": \"#defaults-of-diff\"\n      }}>{`excludes certain properties`}</a>{` to reduce noise. Use `}<inlineCode parentName=\"p\">{`--all`}</inlineCode>{` if you would like to include the `}<em parentName=\"p\">{`entire`}</em>{` Diagnostic Report when comparing.`}</p>\n    <p><inlineCode parentName=\"p\">{`--all`}</inlineCode>{` cannot be used with `}<inlineCode parentName=\"p\">{`--includeProp/-i`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`--excludeProp/-x`}</inlineCode>{`.`}</p>\n    <h5>{`Example: Compare All Fields`}</h5>\n    <p>{`To compare the entirety of `}<inlineCode parentName=\"p\">{`report-A.json`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`report-B.json`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`rtk diff --all report-A.json report-B.json\n`}</code></pre>\n    <h3><inlineCode parentName=\"h3\">{`diff`}</inlineCode>{`: Additional Options`}</h3>\n    <p><inlineCode parentName=\"p\">{`diff`}</inlineCode>{` supports the following common output options:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#-output-lessfilegreater-o-lessfilegreater\"\n        }}><inlineCode parentName=\"a\">{`--output`}</inlineCode></a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#-show-secrets-unsafe\"\n        }}><inlineCode parentName=\"a\">{`--show-secrets-unsafe`}</inlineCode></a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#-transform-lesstransformergreater-t-lesstransformergreater\"\n        }}><inlineCode parentName=\"a\">{`--transform`}</inlineCode></a></li>\n    </ul>\n    <h2>{`The `}<inlineCode parentName=\"h2\">{`inspect`}</inlineCode>{` Command`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`inspect`}</inlineCode>{` command runs heuristics, called `}<em parentName=\"p\">{`Rules`}</em>{`, on one or more Diagnostic Reports. If a Rule finds a potential problem, it will output a message. Some messages may be warnings, and others may be purely informational.`}</p>\n    <p>{`The purpose of `}<inlineCode parentName=\"p\">{`inspect`}</inlineCode>{` is to automate the discovery of potential problems in a Node.js process. These may range from runaway resource consumption, to nonstandard configuration, to hung event loops. If a developer can closely inspect a Diagnostic Report to uncover a problem, a Rule can automate this process. Also: developers like to automate things.`}</p>\n    <p><inlineCode parentName=\"p\">{`inspect`}</inlineCode>{` draws heavily from `}<a parentName=\"p\" {...{\n        \"href\": \"https://eslint.org\"\n      }}>{`ESLint`}</a>{`. Like ESLint, `}<Metadata prop=\"packageName\" mdxType=\"Metadata\" />{` ships with built-in Rules and a recommended configuration. Also like ESLint, developers can create and distribute their own Rules.`}</p>\n    <h3>{`Basic Usage: `}<inlineCode parentName=\"h3\">{`rtk inspect <file..>`}</inlineCode></h3>\n    <p>{`To use `}<inlineCode parentName=\"p\">{`inspect`}</inlineCode>{` with the default “recommended” configuration:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`rtk inspect report.json\n`}</code></pre>\n    <p>{`To use `}<inlineCode parentName=\"p\">{`inspect`}</inlineCode>{` with the default “recommended” configuration across three (3) report files:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`rtk inspect report-A.json report-B.json report-C.json\n`}</code></pre>\n    <h3><inlineCode parentName=\"h3\">{`inspect`}</inlineCode>{`: Output Description`}</h3>\n    <p><inlineCode parentName=\"p\">{`inspect`}</inlineCode>{`’s output contains four (4) fields:`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Severity`}</strong>{`: The “severity” of a Message. One of the following, in decreasing order of severity:`}<ul parentName=\"li\">\n          <li parentName=\"ul\"><strong parentName=\"li\">{`ERROR`}</strong>{`: The associated Message highlights an issue that `}<em parentName=\"li\">{`should`}</em>{` be investigated.`}</li>\n          <li parentName=\"ul\"><strong parentName=\"li\">{`WARNING`}</strong>{`: The associated Message highlights an issue that `}<em parentName=\"li\">{`might`}</em>{` need investigation.`}</li>\n          <li parentName=\"ul\"><strong parentName=\"li\">{`INFO`}</strong>{`: The associated Message is purely informational.`}</li>\n        </ul></li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`File`}</strong>{`: The Diagnostic Report file referenced, or `}<inlineCode parentName=\"li\">{`(multiple files)`}</inlineCode>{` if the Message is aggregated from across multiple files.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Rule`}</strong>{`: The name (unique identifier) of the Rule which sent the Message.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Message`}</strong>{`: A human-readable explanation of the issue.`}</li>\n    </ul>\n    <p>{`In the default, tabular output, the severities `}<inlineCode parentName=\"p\">{`ERROR`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`WARNING`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`INFO`}</inlineCode>{` will be respectively highlighted in red, yellow, and blue.`}</p>\n    <h3><inlineCode parentName=\"h3\">{`inspect`}</inlineCode>{`: Defaults`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Output: a human-readable, `}<strong parentName=\"li\">{`tabular view`}</strong>{` (in color, where available)`}</li>\n      <li parentName=\"ul\">{`Secrets are `}<strong parentName=\"li\">{`redacted`}</strong>{` from Diagnostic Reports `}<em parentName=\"li\">{`before`}</em>{` Rule execution`}</li>\n      <li parentName=\"ul\">{`The minimum severity level is `}<inlineCode parentName=\"li\">{`WARNING`}</inlineCode>{`; `}<inlineCode parentName=\"li\">{`INFO`}</inlineCode>{` messages will be suppressed.`}</li>\n      <li parentName=\"ul\"><em parentName=\"li\">{`Without a configuration file`}</em>{` present, the “recommended” set of Rules will be run:`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`At the time of this writing, this is `}<em parentName=\"li\">{`all built-in Rules`}</em>{`.`}</li>\n          <li parentName=\"ul\">{`Each Rule uses its default configuration.`}</li>\n        </ul></li>\n      <li parentName=\"ul\"><em parentName=\"li\">{`With a configuration file`}</em>{` present, the Rules used and configurations thereof will be as declared by the configuration file.`}</li>\n    </ul>\n    <h3><inlineCode parentName=\"h3\">{`inspect`}</inlineCode>{`: Options`}</h3>\n    <p><inlineCode parentName=\"p\">{`inspect`}</inlineCode>{` allows filtering of Messages by their `}<em parentName=\"p\">{`severity`}</em>{`.`}</p>\n    <h4><inlineCode parentName=\"h4\">{`--severity <severity>`}</inlineCode></h4>\n    <p>{`The minimum threshold for Message severity, as defined by `}<inlineCode parentName=\"p\">{`severity`}</inlineCode>{`. In other words, any Message with a severity “lower” than this will be suppressed.`}</p>\n    <p>{`Allowed values for `}<inlineCode parentName=\"p\">{`severity`}</inlineCode>{`, in descending order of severity:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`ERROR`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`WARNING`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`INFO`}</inlineCode></li>\n    </ul>\n    <p>{`The `}<inlineCode parentName=\"p\">{`severity`}</inlineCode>{` argument is case-insensitive. The default `}<inlineCode parentName=\"p\">{`severity`}</inlineCode>{` is `}<inlineCode parentName=\"p\">{`WARNING`}</inlineCode>{`.`}</p>\n    <h5>{`Example: Inspect `}<inlineCode parentName=\"h5\">{`report.json`}</inlineCode>{`, Including “Info”, “Warning” and “Error”-severity Messages`}</h5>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`rtk inspect --severity info report.json\n`}</code></pre>\n    <h5>{`Example: Inspect `}<inlineCode parentName=\"h5\">{`report.json`}</inlineCode>{`, Including Only “Error”-severity Messages`}</h5>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`rtk inspect --severity ERROR report.json\n`}</code></pre>\n    <h3><inlineCode parentName=\"h3\">{`inspect`}</inlineCode>{`: Additional Options`}</h3>\n    <p><inlineCode parentName=\"p\">{`inspect`}</inlineCode>{` supports the following common output options:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#-output-lessfilegreater-o-lessfilegreater\"\n        }}><inlineCode parentName=\"a\">{`--output`}</inlineCode></a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#-show-secrets-unsafe\"\n        }}><inlineCode parentName=\"a\">{`--show-secrets-unsafe`}</inlineCode></a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#-transform-lesstransformergreater-t-lesstransformergreater\"\n        }}><inlineCode parentName=\"a\">{`--transform`}</inlineCode></a></li>\n    </ul>\n    <h2>{`The `}<inlineCode parentName=\"h2\">{`redact`}</inlineCode>{` Command`}</h2>\n    <p>{`Node.js Diagnostic Reports contain the entirety of a process’ execution environment in the `}<inlineCode parentName=\"p\">{`environmentVariables`}</inlineCode>{` field.`}</p>\n    <p><inlineCode parentName=\"p\">{`environmentVariables`}</inlineCode>{` can contain things like API keys, tokens, and other secrets. It’s important to keep these secrets from `}<em parentName=\"p\">{`leaking`}</em>{`, and a Node.js Diagnostic Report is one potential source of leaks.`}</p>\n    <InlineNotification kind=\"warning\" mdxType=\"InlineNotification\">\n      <p>{`Use the `}<inlineCode parentName=\"p\">{`redact`}</inlineCode>{` command before transmitting a Node.js Diagnostic Report file anywhere!`}</p>\n    </InlineNotification>\n    <p>{`When provided one or more report files, `}<inlineCode parentName=\"p\">{`redact`}</inlineCode>{` command `}<em parentName=\"p\">{`redacts`}</em>{` known secrets and secret-ish values from this field—while retaining the key name. Values are replaced with the string `}<inlineCode parentName=\"p\">{`[REDACTED]`}</inlineCode>{`.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`redact`}</inlineCode>{` command is essentially a `}<em parentName=\"p\">{`shortcut`}</em>{` for `}<inlineCode parentName=\"p\">{`transform -t redact`}</inlineCode>{`.`}</p>\n    <h3>{`Basic Usage: `}<inlineCode parentName=\"h3\">{`rtk redact <file..>`}</inlineCode></h3>\n    <p>{`This command will echo a redacted version of `}<inlineCode parentName=\"p\">{`report.json`}</inlineCode>{` to `}<inlineCode parentName=\"p\">{`STDOUT`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`rtk redact report.json\n`}</code></pre>\n    <h3><inlineCode parentName=\"h3\">{`redact`}</inlineCode>{`: Output Description`}</h3>\n    <p>{`The output is the input—Node.js Diagnostic Reports—but with secrets redacted from the `}<inlineCode parentName=\"p\">{`environmentVariables`}</inlineCode>{` field.`}</p>\n    <h3><inlineCode parentName=\"h3\">{`redact`}</inlineCode>{`: Defaults`}</h3>\n    <p>{`The default behavior of `}<inlineCode parentName=\"p\">{`redact`}</inlineCode>{` is to output the same format which Node.js Diagnostic Report files use: pretty-printed JSON.`}</p>\n    <h3><inlineCode parentName=\"h3\">{`redact`}</inlineCode>{`: Options`}</h3>\n    <h4><inlineCode parentName=\"h4\">{`--replace`}</inlineCode></h4>\n    <p>{`Redacts file(s) `}<em parentName=\"p\">{`in-place`}</em>{`. In other words, this reads the file(s), redacts secrets, and overwrites them.`}</p>\n    <p>{`When `}<inlineCode parentName=\"p\">{`--replace`}</inlineCode>{` is used, `}<inlineCode parentName=\"p\">{`redact`}</inlineCode>{` will not echo anything to `}<inlineCode parentName=\"p\">{`STDOUT`}</inlineCode>{`.`}</p>\n    <h3><inlineCode parentName=\"h3\">{`redact`}</inlineCode>{`: Additional Options`}</h3>\n    <p><inlineCode parentName=\"p\">{`redact`}</inlineCode>{` does `}<em parentName=\"p\">{`not`}</em>{` support transformers, and is limited to JSON output! If you need to use a transformer, use `}<a parentName=\"p\" {...{\n        \"href\": \"#the-transform-command\"\n      }}>{`the `}<inlineCode parentName=\"a\">{`transform`}</inlineCode>{` command`}</a>{` instead (which redacts by default).`}</p>\n    <p>{`Since `}<inlineCode parentName=\"p\">{`redact`}</inlineCode>{` defaults to pretty-printed output, it supports `}<a parentName=\"p\" {...{\n        \"href\": \"#-pretty\"\n      }}><inlineCode parentName=\"a\">{`--no-pretty`}</inlineCode></a>{`.`}</p>\n    <h2>{`The `}<inlineCode parentName=\"h2\">{`transform`}</inlineCode>{` Command`}</h2>\n    <p><inlineCode parentName=\"p\">{`transform`}</inlineCode>{` converts a Node.js Diagnostic Report into a different format.`}</p>\n    <p>{`While `}<a parentName=\"p\" {...{\n        \"href\": \"#-transform-lesstransformergreater-t-lesstransformergreater\"\n      }}><inlineCode parentName=\"a\">{`--transform`}</inlineCode></a>{` can be used with the output of other commands, the `}<inlineCode parentName=\"p\">{`transform`}</inlineCode>{` command works `}<em parentName=\"p\">{`directly`}</em>{` on report files.`}</p>\n    <p>{`As with any other command, reports will be redacted `}<em parentName=\"p\">{`by default`}</em>{`.`}</p>\n    <h3>{`Basic Usage: `}<inlineCode parentName=\"h3\">{`rtk transform <file..>`}</inlineCode></h3>\n    <p>{`To transform Node.js Diagnostic Report file `}<inlineCode parentName=\"p\">{`report.json`}</inlineCode>{` into `}<em parentName=\"p\">{`non-pretty-printed`}</em>{` (ugly?) JSON:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`rtk transform report.json\n`}</code></pre>\n    <p>{`The behavior of the below example is `}<em parentName=\"p\">{`identical`}</em>{` to `}<inlineCode parentName=\"p\">{`rtk redact report.json`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`rtk transform --pretty report.json\n`}</code></pre>\n    <p>{`Generally, you will use the `}<a parentName=\"p\" {...{\n        \"href\": \"#-transform-lesstransformergreater-t-lesstransformergreater\"\n      }}><inlineCode parentName=\"a\">{`--transform <transformer>`}</inlineCode></a>{` option to change the transformer. Notably, the `}<inlineCode parentName=\"p\">{`transform`}</inlineCode>{` command works with `}<em parentName=\"p\">{`any`}</em>{` transformer.`}</p>\n    <p>{`To transform Node.js Diagnostic Report file `}<inlineCode parentName=\"p\">{`report.json`}</inlineCode>{` into CSV (for reasons):`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`rtk transform report.json -t csv\n`}</code></pre>\n    <h3><inlineCode parentName=\"h3\">{`transform`}</inlineCode>{`: Output Description`}</h3>\n    <p>{`The output of `}<inlineCode parentName=\"p\">{`transform`}</inlineCode>{` is based entirely on which transform(s) are used.`}</p>\n    <h3><inlineCode parentName=\"h3\">{`transform`}</inlineCode>{`: Defaults`}</h3>\n    <p>{`The default behavior of `}<inlineCode parentName=\"p\">{`transform`}</inlineCode>{` is to output the original Node.js Diagnostic Report file(s), redacted, and in compressed (non-pretty-printed) JSON format.`}</p>\n    <h3><inlineCode parentName=\"h3\">{`transform`}</inlineCode>{`: Additional Options`}</h3>\n    <p><inlineCode parentName=\"p\">{`transform`}</inlineCode>{` supports the following common output options:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#-output-lessfilegreater-o-lessfilegreater\"\n        }}><inlineCode parentName=\"a\">{`--output`}</inlineCode></a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#-show-secrets-unsafe\"\n        }}><inlineCode parentName=\"a\">{`--show-secrets-unsafe`}</inlineCode></a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#-transform-lesstransformergreater-t-lesstransformergreater\"\n        }}><inlineCode parentName=\"a\">{`--transform`}</inlineCode></a></li>\n    </ul>\n    <h2>{`Common Output Options`}</h2>\n    <p><em parentName=\"p\">{`Most`}</em>{` of these options are available across `}<em parentName=\"p\">{`most`}</em>{` commands. Exceptions include:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`The `}<inlineCode parentName=\"li\">{`redact`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`transform`}</inlineCode>{` commands do not allow `}<inlineCode parentName=\"li\">{`-o`}</inlineCode>{`, due to ambiguous behavior when given multiple files; use `}<inlineCode parentName=\"li\">{`--replace`}</inlineCode>{` instead.`}</li>\n      <li parentName=\"ul\">{`The `}<inlineCode parentName=\"li\">{`redact`}</inlineCode>{` command doesn’t allow `}<inlineCode parentName=\"li\">{`--show-secrets-unsafe`}</inlineCode>{`, because that would be pointless.`}</li>\n    </ul>\n    <h4><inlineCode parentName=\"h4\">{`--output <file>, -o <file>`}</inlineCode></h4>\n    <p>{`Redirect output to a file.`}</p>\n    <h4>{`Example: Write Output of Comparison of `}<inlineCode parentName=\"h4\">{`report-A.json`}</inlineCode>{` and `}<inlineCode parentName=\"h4\">{`report-B.json`}</inlineCode>{` to File`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`rtk diff report-A.json report-B.json -o diff-output.txt\n`}</code></pre>\n    <p>{`The above is equivalent to the following in a POSIX shell:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`rtk diff report-A.json report-B.json > diff-output.txt\n`}</code></pre>\n    <h4>{`Example: Write Output of Comparison of `}<inlineCode parentName=\"h4\">{`report-A.json`}</inlineCode>{` and `}<inlineCode parentName=\"h4\">{`report-B.json`}</inlineCode>{` to File, in Pretty-Printed JSON Format`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`rtk diff report-A.json report-B.json --transform json --pretty -o diff-output.json\n`}</code></pre>\n    <h4><inlineCode parentName=\"h4\">{`--show-secrets-unsafe`}</inlineCode></h4>\n    <p>{`This will disable automatic redaction of secrets from the `}<inlineCode parentName=\"p\">{`environmentVariables`}</inlineCode>{` field.`}</p>\n    <InlineNotification kind=\"error\" mdxType=\"InlineNotification\">\n      <p>{`The `}<inlineCode parentName=\"p\">{`--show-secrets-unsafe`}</inlineCode>{` option is—as you may have guessed—`}<em parentName=\"p\">{`unsafe`}</em>{`. Don’t use it unless you’re `}<em parentName=\"p\">{`absolutely sure`}</em>{` that you need to!`}</p>\n    </InlineNotification>\n    <h5>{`Example: Disable Redacting of Secrets`}</h5>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`# danger!\nrtk diff --show-secrets-unsafe report-A.json report-B.json\n`}</code></pre>\n    <h4><inlineCode parentName=\"h4\">{`--transform <transformer>, -t <transformer>`}</inlineCode></h4>\n    <p>{`Transforms command output into various formats.`}</p>\n    <p>{`This option can be repeated, creating a `}<em parentName=\"p\">{`transformer chain`}</em>{`. This works when the output of a transformer is valid input for a subsequent transformer. Note that each transformer can only be used `}<em parentName=\"p\">{`once`}</em>{`.`}</p>\n    <p>{`Allowed values of `}<inlineCode parentName=\"p\">{`transformer`}</inlineCode>{`:`}</p>\n    <dl className={mono}>\n  <dt>csv</dt>\n  <dd>CSV output; nested fields are expanded, so each field has its own column.</dd>\n  <dt>filter</dt>\n  <dd>\n        <p>{`Filter the output by including/excluding fields. `}<em parentName=\"p\">{`Only works with the `}<a parentName=\"em\" {...{\n              \"href\": \"#the-transform-command\"\n            }}><inlineCode parentName=\"a\">{`transform`}</inlineCode></a>{` command`}</em>{`.`}</p>\n      </dd>\n  <dt>json</dt>\n  <dd>JSON output</dd>\n  <dt>newline</dt>\n  <dd>\n        <p>{`Output in newline-delimited JSON format (A.K.A. `}<inlineCode parentName=\"p\">{`ndjson`}</inlineCode>{` and other aliases); useful for streams.`}</p>\n      </dd>\n  <dt>stack-hash</dt>\n  <dd>\n        <p>{`Takes a hash of the stack trace from the `}<inlineCode parentName=\"p\">{`javascriptStack`}</inlineCode>{` field, and outputs in a JSON format suitable for collection of metrics. `}<em parentName=\"p\">{`Only works with the `}<a parentName=\"em\" {...{\n              \"href\": \"#the-transform-command\"\n            }}><inlineCode parentName=\"a\">{`transform`}</inlineCode></a>{` command`}</em>{`.`}</p>\n      </dd>\n  <dt>table</dt>\n  <dd>Output in colorful, human-readable tabular format <em>(default behavior)</em>.</dd>\n    </dl>\n    <InlineNotification kind=\"warning\" mdxType=\"InlineNotification\">\n      <p><strong parentName=\"p\">{`Not all commands support all transformers!`}</strong>{` Please refer to the list of supported transformers as shown in `}<inlineCode parentName=\"p\">{`rtk <command> --help`}</inlineCode>{`.`}</p>\n    </InlineNotification>\n    <h5>{`Example: Output Diff of `}<inlineCode parentName=\"h5\">{`report-A.json`}</inlineCode>{` and `}<inlineCode parentName=\"h5\">{`report-B.json`}</inlineCode>{` as CSV`}</h5>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`rtk diff -t csv report-A.json report-B.json\n`}</code></pre>\n    <h5>{`Example: Output Inspection of `}<inlineCode parentName=\"h5\">{`report.json`}</inlineCode>{` as JSON`}</h5>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`rtk inspect -t json report.json\n`}</code></pre>\n    <h5>{`Example: Output Diff of `}<inlineCode parentName=\"h5\">{`report-A.json`}</inlineCode>{` and `}<inlineCode parentName=\"h5\">{`report-B.json`}</inlineCode>{` as Newline-Delimited JSON`}</h5>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`rtk diff -t newline report-A.json report-B.json\n`}</code></pre>\n    <h5>{`Example: Output Inspection of `}<inlineCode parentName=\"h5\">{`report-A.json`}</inlineCode>{` and `}<inlineCode parentName=\"h5\">{`report-B.json`}</inlineCode>{` in Tabular Format (Default)`}</h5>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`rtk inspect -t table report-A.json report-B.json\n`}</code></pre>\n    <p>{`For further customization of transformer output, see `}<a parentName=\"p\" {...{\n        \"href\": \"#transformer-specific-options\"\n      }}>{`Transformer-Specific Options`}</a>{`.`}</p>\n    <h2>{`Transformer-Specific Options`}</h2>\n    <p>{`Transformers, when used either via the `}<inlineCode parentName=\"p\">{`transform`}</inlineCode>{` command, or the `}<inlineCode parentName=\"p\">{`--transform / -t`}</inlineCode>{` option, have their own options. These options `}<em parentName=\"p\">{`only`}</em>{` apply when the transformer in question is used.`}</p>\n    <h3><inlineCode parentName=\"h3\">{`json`}</inlineCode>{` Transformer Options`}</h3>\n    <p>{`The `}<inlineCode parentName=\"p\">{`json`}</inlineCode>{` transformer has only one (1) option, `}<a parentName=\"p\" {...{\n        \"href\": \"#--pretty\"\n      }}><inlineCode parentName=\"a\">{`--pretty`}</inlineCode></a>{`.`}</p>\n    <h4><inlineCode parentName=\"h4\">{`--pretty`}</inlineCode></h4>\n    <p>{`Pretty-prints the JSON output. When used with `}<inlineCode parentName=\"p\">{`diff`}</inlineCode>{`, this defaults to `}<inlineCode parentName=\"p\">{`false`}</inlineCode>{`.`}</p>\n    <h5>{`Example: Output Inspection of `}<inlineCode parentName=\"h5\">{`report.json`}</inlineCode>{` as Pretty-Printed JSON`}</h5>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`rtk inspect -t json --pretty report.json\n`}</code></pre>\n    <h5>{`Example: Redact and Output `}<inlineCode parentName=\"h5\">{`report.json`}</inlineCode>{` as Non-Pretty-Printed JSON`}</h5>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`rtk redact --no-pretty report.json\n`}</code></pre>\n    <h3><inlineCode parentName=\"h3\">{`table`}</inlineCode>{` Transformer Options`}</h3>\n    <p>{`These options allow tweaking of the tabular display.`}</p>\n    <h4><inlineCode parentName=\"h4\">{`--max-width <columns>`}</inlineCode></h4>\n    <p>{`Sets the maximum width, `}<inlineCode parentName=\"p\">{`columns`}</inlineCode>{`, of the table output. By default, the table will stretch the length of the terminal. In a non-TTY situation, the default width will be 80 characters.`}</p>\n    <p>{`If `}<inlineCode parentName=\"p\">{`--no-truncate`}</inlineCode>{` is used, this option will be ignored.`}</p>\n    <h5>{`Example: Ouptut Diff of `}<inlineCode parentName=\"h5\">{`report-A.json`}</inlineCode>{` and `}<inlineCode parentName=\"h5\">{`report-B.json`}</inlineCode>{` in Tabular Format, With a Max Table Width of 72 Characters`}</h5>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`rtk diff -t table --max-width 72 report-A.json report-B.json\n`}</code></pre>\n    <h4><inlineCode parentName=\"h4\">{`--truncate`}</inlineCode></h4>\n    <p>{`Truncate the values displayed in the table to fit the columns. This is enabled by default, as certain fields (e.g., `}<inlineCode parentName=\"p\">{`environmentVariables.PATH`}</inlineCode>{`) are likely to be very long.`}</p>\n    <h5>{`Example: Output Inspection of `}<inlineCode parentName=\"h5\">{`report.json`}</inlineCode>{` in Tabular Format, Without Truncating Values`}</h5>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`rtk inspect -t table --no-truncate report.json\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}