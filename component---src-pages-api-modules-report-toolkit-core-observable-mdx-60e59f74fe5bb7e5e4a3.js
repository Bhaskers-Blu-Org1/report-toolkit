(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{409:function(e,t,r){"use strict";r.r(t),r.d(t,"_frontmatter",(function(){return o})),r.d(t,"default",(function(){return m}));r(11),r(5),r(6),r(4),r(10),r(1),r(0);var n=r(111),a=r(421);function b(){return(b=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}var o={},l=function(e){return function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),Object(n.b)("div",t)}},p=l("Breadcrumb"),c=l("BreadcrumbItem"),i={_frontmatter:o},s=a.a;function m(e){var t=e.components,r=function(e,t){if(null==e)return{};var r,n,a={},b=Object.keys(e);for(n=0;n<b.length;n++)r=b[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,["components"]);return Object(n.b)(s,b({},i,r,{components:t,mdxType:"MDXLayout"}),Object(n.b)(p,{noTrailingSlash:!0,mdxType:"Breadcrumb"},Object(n.b)(c,{mdxType:"BreadcrumbItem"},Object(n.b)("a",{href:"../home"},"report-toolkit API")),Object(n.b)(c,{mdxType:"BreadcrumbItem"},Object(n.b)("a",{href:"report_toolkit_core"},"@report-toolkit/core")),Object(n.b)(c,{mdxType:"BreadcrumbItem"},Object(n.b)("a",{href:"report_toolkit_core.observable"},"observable"))),Object(n.b)("p",null,Object(n.b)("a",b({parentName:"p"},{href:"https://rxjs.dev"}),"RxJS")," ",Object(n.b)("inlineCode",{parentName:"p"},"Observable"),"-based API. Used interally, but can also be used by consumers."),Object(n.b)("h2",{id:"type-aliases"},"Type aliases"),Object(n.b)("h3",{id:"config"},"Config"),Object(n.b)("p",null,"Ƭ ",Object(n.b)("strong",{parentName:"p"},"Config"),": ",Object(n.b)("em",{parentName:"p"},"any")),Object(n.b)("p",null,"A “normalized” configuration object."),Object(n.b)("hr",null),Object(n.b)("h3",{id:"diffoptions"},"DiffOptions"),Object(n.b)("p",null,"Ƭ ",Object(n.b)("strong",{parentName:"p"},"DiffOptions"),": ",Object(n.b)("em",{parentName:"p"},"object")),Object(n.b)("p",null,"Options for ",Object(n.b)("a",b({parentName:"p"},{href:"report_toolkit_core.observable.mdx#diff"}),"diff"),"."),Object(n.b)("h4",{id:"type-declaration"},"Type declaration:"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},Object(n.b)("strong",{parentName:"p"},"excludeProperties"),": ",Object(n.b)("em",{parentName:"p"},"string[]"))),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},Object(n.b)("strong",{parentName:"p"},"includeAll"),": ",Object(n.b)("em",{parentName:"p"},"boolean"))),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},Object(n.b)("strong",{parentName:"p"},"includeProperties"),": ",Object(n.b)("em",{parentName:"p"},"string[]"))),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},Object(n.b)("strong",{parentName:"p"},"showSecretsUnsafe"),": ",Object(n.b)("em",{parentName:"p"},"boolean")))),Object(n.b)("hr",null),Object(n.b)("h3",{id:"diffresult"},"DiffResult"),Object(n.b)("p",null,"Ƭ ",Object(n.b)("strong",{parentName:"p"},"DiffResult"),": ",Object(n.b)("em",{parentName:"p"},"object")),Object(n.b)("p",null,"A single difference between two reports.  Emitted from ",Object(n.b)("a",b({parentName:"p"},{href:"report_toolkit_core.observable.mdx#diff"}),"diff"),"."),Object(n.b)("h4",{id:"type-declaration-1"},"Type declaration:"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},Object(n.b)("strong",{parentName:"p"},"oldValue"),": ",Object(n.b)("em",{parentName:"p"},"string | number | boolean"))),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},Object(n.b)("strong",{parentName:"p"},"op"),": ",Object(n.b)("em",{parentName:"p"},"“replace” | “add” | “remove”"))),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},Object(n.b)("strong",{parentName:"p"},"path"),": ",Object(n.b)("em",{parentName:"p"},"string"))),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},Object(n.b)("strong",{parentName:"p"},"value"),": ",Object(n.b)("em",{parentName:"p"},"string | number | boolean")))),Object(n.b)("hr",null),Object(n.b)("h3",{id:"inspectoptions"},"InspectOptions"),Object(n.b)("p",null,"Ƭ ",Object(n.b)("strong",{parentName:"p"},"InspectOptions"),": ",Object(n.b)("em",{parentName:"p"},"object")),Object(n.b)("p",null,"Options for ",Object(n.b)("a",b({parentName:"p"},{href:"report_toolkit_core.observable.mdx#inspect"}),"inspect"),"."),Object(n.b)("h4",{id:"type-declaration-2"},"Type declaration:"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},Object(n.b)("strong",{parentName:"p"},"ruleConfig"),": ",Object(n.b)("em",{parentName:"p"},"any"))),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},Object(n.b)("strong",{parentName:"p"},"severity"),": ",Object(n.b)("em",{parentName:"p"},"string"))),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},Object(n.b)("strong",{parentName:"p"},"showSecretsUnsafe"),": ",Object(n.b)("em",{parentName:"p"},"boolean"))),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},Object(n.b)("strong",{parentName:"p"},"sort"),": ",Object(n.b)("em",{parentName:"p"},"boolean"))),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},Object(n.b)("strong",{parentName:"p"},"sortDirection"),": ",Object(n.b)("em",{parentName:"p"},"“desc” | “asc”"))),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},Object(n.b)("strong",{parentName:"p"},"sortField"),": ",Object(n.b)("em",{parentName:"p"},"string")))),Object(n.b)("hr",null),Object(n.b)("h3",{id:"rtkplugin"},"RTKPlugin"),Object(n.b)("p",null,"Ƭ ",Object(n.b)("strong",{parentName:"p"},"RTKPlugin"),": ",Object(n.b)("em",{parentName:"p"},"object")),Object(n.b)("p",null,"Represents a “plugin”.  As of this writing, plugins may only contain rule definitions for ",Object(n.b)("a",b({parentName:"p"},{href:"report_toolkit_core.observable.mdx#inspect"}),"inspect"),"; it would make sense to add support for transformers, as well."),Object(n.b)("h4",{id:"type-declaration-3"},"Type declaration:"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("strong",{parentName:"li"},"rules"),": ",Object(n.b)("em",{parentName:"li"},"object[]"))),Object(n.b)("hr",null),Object(n.b)("h3",{id:"toreportfromobjectoptions"},"ToReportFromObjectOptions"),Object(n.b)("p",null,"Ƭ ",Object(n.b)("strong",{parentName:"p"},"ToReportFromObjectOptions"),": ",Object(n.b)("em",{parentName:"p"},"object")),Object(n.b)("p",null,"Options for ",Object(n.b)("a",b({parentName:"p"},{href:"report_toolkit_core.observable.mdx#toreportfromobject"}),"toReportFromObject"),"."),Object(n.b)("h4",{id:"type-declaration-4"},"Type declaration:"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("strong",{parentName:"li"},"showSecretsUnsafe"),": ",Object(n.b)("em",{parentName:"li"},"boolean"))),Object(n.b)("hr",null),Object(n.b)("h3",{id:"transformoptions"},"TransformOptions"),Object(n.b)("p",null,"Ƭ ",Object(n.b)("strong",{parentName:"p"},"TransformOptions"),": ",Object(n.b)("em",{parentName:"p"},"object")),Object(n.b)("p",null,"Options for ",Object(n.b)("a",b({parentName:"p"},{href:"report_toolkit_core.observable.mdx#transform"}),"transform"),"."),Object(n.b)("h4",{id:"type-declaration-5"},"Type declaration:"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},Object(n.b)("strong",{parentName:"p"},"beginWith"),": ",Object(n.b)("em",{parentName:"p"},"string"))),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},Object(n.b)("strong",{parentName:"p"},"defaultTransformer"),": ",Object(n.b)("em",{parentName:"p"},"string"))),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},Object(n.b)("strong",{parentName:"p"},"endWith"),": ",Object(n.b)("em",{parentName:"p"},"string")))),Object(n.b)("hr",null),Object(n.b)("h3",{id:"transformerblueprint"},"TransformerBlueprint"),Object(n.b)("p",null,"Ƭ ",Object(n.b)("strong",{parentName:"p"},"TransformerBlueprint"),": ",Object(n.b)("em",{parentName:"p"},"object")),Object(n.b)("p",null,"A pairing of a transformer ID and a configuration of that transformer, to be\ningested by ",Object(n.b)("a",b({parentName:"p"},{href:"report_toolkit_core.observable.mdx#transform"}),"transform"),"."),Object(n.b)("h4",{id:"type-declaration-6"},"Type declaration:"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},Object(n.b)("strong",{parentName:"p"},"config"),": ",Object(n.b)("em",{parentName:"p"},"any"))),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},Object(n.b)("strong",{parentName:"p"},"id"),": ",Object(n.b)("em",{parentName:"p"},"string")))),Object(n.b)("h2",{id:"functions"},"Functions"),Object(n.b)("h3",{id:"deregisterplugins"},"deregisterPlugins"),Object(n.b)("p",null,"▸ ",Object(n.b)("strong",{parentName:"p"},"deregisterPlugins"),"(): ",Object(n.b)("em",{parentName:"p"},"boolean")),Object(n.b)("p",null,"De-register (“unload”) all plugins."),Object(n.b)("p",null,"Example:"),Object(n.b)("pre",null,Object(n.b)("code",b({parentName:"pre"},{className:"language-js"}),"const {deregisterPlugins} = require('@report-toolkit/core').observable;\n\nconsole.log(deregisterPlugins()); // `true` or `false`, depending.\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns:")," ",Object(n.b)("em",{parentName:"p"},"boolean")),Object(n.b)("p",null,Object(n.b)("inlineCode",{parentName:"p"},"true")," if plugins were cleared; ",Object(n.b)("inlineCode",{parentName:"p"},"false")," if none registered"),Object(n.b)("hr",null),Object(n.b)("h3",{id:"diff"},"diff"),Object(n.b)("p",null,"▸ ",Object(n.b)("strong",{parentName:"p"},"diff"),"(",Object(n.b)("inlineCode",{parentName:"p"},"report1"),": any, ",Object(n.b)("inlineCode",{parentName:"p"},"report2"),": any, ",Object(n.b)("inlineCode",{parentName:"p"},"opts?"),": Partial‹",Object(n.b)("a",b({parentName:"p"},{href:"report_toolkit_core.observable#diffoptions"}),"DiffOptions"),"›): ",Object(n.b)("em",{parentName:"p"},"Observable‹",Object(n.b)("a",b({parentName:"em"},{href:"report_toolkit_core.observable#diffresult"}),"DiffResult"),"›")),Object(n.b)("p",null,"Returns the difference between two reports."),Object(n.b)("p",null,"Example:"),Object(n.b)("pre",null,Object(n.b)("code",b({parentName:"pre"},{className:"language-js"}),"const {diff} = require('@report-toolkit/core').observable;\n\nconst report1 = process.report.getReport();\nconst report2 = process.report.getReport();\n\ndiff(report1, report2, {\n  filterProperties: ['header', 'javascriptStack', 'nativeStack'],\n  showSecretsUnsafe: false\n}).subscribe(({op, path, newValue, oldValue}) => {\n  console.log(`[${op}] <${path}> ${oldValue} => ${newValue}`);\n})\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},Object(n.b)("inlineCode",{parentName:"strong"},"todo"))," support JSON reports"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Parameters:")),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(n.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(n.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",b({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"report1")),Object(n.b)("td",b({parentName:"tr"},{align:null}),"any"),Object(n.b)("td",b({parentName:"tr"},{align:null}),"First report to diff")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",b({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"report2")),Object(n.b)("td",b({parentName:"tr"},{align:null}),"any"),Object(n.b)("td",b({parentName:"tr"},{align:null}),"Second report to diff")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",b({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"opts?")),Object(n.b)("td",b({parentName:"tr"},{align:null}),"Partial‹",Object(n.b)("a",b({parentName:"td"},{href:"report_toolkit_core.observable#diffoptions"}),"DiffOptions"),"›"),Object(n.b)("td",b({parentName:"tr"},{align:null}),"-")))),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns:")," ",Object(n.b)("em",{parentName:"p"},"Observable‹",Object(n.b)("a",b({parentName:"em"},{href:"report_toolkit_core.observable#diffresult"}),"DiffResult"),"›")),Object(n.b)("p",null,"Results, one per difference"),Object(n.b)("hr",null),Object(n.b)("h3",{id:"fromtransformerchain"},"fromTransformerChain"),Object(n.b)("p",null,"▸ ",Object(n.b)("strong",{parentName:"p"},"fromTransformerChain"),"(",Object(n.b)("inlineCode",{parentName:"p"},"transformerIds"),": string | string[], ",Object(n.b)("inlineCode",{parentName:"p"},"config?"),": Partial‹any›): ",Object(n.b)("em",{parentName:"p"},"Observable‹",Object(n.b)("a",b({parentName:"em"},{href:"report_toolkit_core.observable#transformerblueprint"}),"TransformerBlueprint"),"›")),Object(n.b)("p",null,"Given a list of transformer IDs, create an ",Object(n.b)("inlineCode",{parentName:"p"},"Observable")," which emits ",Object(n.b)("a",b({parentName:"p"},{href:"report_toolkit_core.observable.mdx#transformerblueprint"}),"TransformerBlueprint")," objects. Output should be piped to ",Object(n.b)("a",b({parentName:"p"},{href:"report_toolkit_core.observable.mdx#transform"}),"transform"),"."),Object(n.b)("p",null,"Example:"),Object(n.b)("pre",null,Object(n.b)("code",b({parentName:"pre"},{className:"language-js"}),"const {fromTransformerChain} = require('@report-toolkit/core').observable;\n\nfromTransformerChain(['filter', 'csv'], {\n  transformers: {\n    filter: {include: 'header'},\n    csv: {flatten: true}\n  }\n}); // pipe to transform()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Parameters:")),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(n.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(n.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",b({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"transformerIds")),Object(n.b)("td",b({parentName:"tr"},{align:null}),"string ","|"," string[]"),Object(n.b)("td",b({parentName:"tr"},{align:null}),"List of Transformer IDs")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",b({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"config?")),Object(n.b)("td",b({parentName:"tr"},{align:null}),"Partial‹any›"),Object(n.b)("td",b({parentName:"tr"},{align:null}),"-")))),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns:")," ",Object(n.b)("em",{parentName:"p"},"Observable‹",Object(n.b)("a",b({parentName:"em"},{href:"report_toolkit_core.observable#transformerblueprint"}),"TransformerBlueprint"),"›")),Object(n.b)("hr",null),Object(n.b)("h3",{id:"inspect"},"inspect"),Object(n.b)("p",null,"▸ ",Object(n.b)("strong",{parentName:"p"},"inspect"),"(",Object(n.b)("inlineCode",{parentName:"p"},"reports"),": any, ",Object(n.b)("inlineCode",{parentName:"p"},"opts?"),": Partial‹",Object(n.b)("a",b({parentName:"p"},{href:"report_toolkit_core.observable#inspectoptions"}),"InspectOptions"),"›): ",Object(n.b)("em",{parentName:"p"},"Observable‹",Object(n.b)("a",b({parentName:"em"},{href:"../classes/report_toolkit_inspector.message.message"}),"Message"),"›")),Object(n.b)("p",null,"Inspect one or more reports, running rules against each.  Resolves with an array of zero or more ",Object(n.b)("a",b({parentName:"p"},{href:"/report-toolkit/328674fbd5d39f3447e0b79baa3fc7c9/report_toolkit_inspector.message.message.mdx"}),"Messages"),"."),Object(n.b)("p",null,"Example:"),Object(n.b)("pre",null,Object(n.b)("code",b({parentName:"pre"},{className:"language-js"}),"const {inspect} = require('@report-toolkit/core').observable\n\nconst report = process.report.getReport();\ninspect(report, {\n  severity: 'info',\n  sort: true,\n  sortDirection: 'asc',\n  sortField: 'header.dumpEventTimestamp',\n  showSecretsUnsafe: false,\n  ruleConfig: {\n    'long-timeout': {\n      timeout: '2s'\n    }\n  }\n}).subscribe({message, filename} => {\n  console.log(`${filename}: ${message}`);\n});\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Parameters:")),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(n.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(n.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",b({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"reports")),Object(n.b)("td",b({parentName:"tr"},{align:null}),"any"),Object(n.b)("td",b({parentName:"tr"},{align:null}),"One or more Reports")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",b({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"opts?")),Object(n.b)("td",b({parentName:"tr"},{align:null}),"Partial‹",Object(n.b)("a",b({parentName:"td"},{href:"report_toolkit_core.observable#inspectoptions"}),"InspectOptions"),"›"),Object(n.b)("td",b({parentName:"tr"},{align:null}),"-")))),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns:")," ",Object(n.b)("em",{parentName:"p"},"Observable‹",Object(n.b)("a",b({parentName:"em"},{href:"../classes/report_toolkit_inspector.message.message"}),"Message"),"›")),Object(n.b)("hr",null),Object(n.b)("h3",{id:"ispluginregistered"},"isPluginRegistered"),Object(n.b)("p",null,"▸ ",Object(n.b)("strong",{parentName:"p"},"isPluginRegistered"),"(",Object(n.b)("inlineCode",{parentName:"p"},"pluginId"),": string): ",Object(n.b)("em",{parentName:"p"},"boolean")),Object(n.b)("p",null,"Returns ",Object(n.b)("inlineCode",{parentName:"p"},"true")," if plugin with id ",Object(n.b)("inlineCode",{parentName:"p"},"pluginId")," has already been registered."),Object(n.b)("pre",null,Object(n.b)("code",b({parentName:"pre"},{className:"language-js"}),"const {isPluginRegistered} = require('@report-toolkit/core').observable;\n\nconsole.log(isPluginRegistered('my-plugin')); // `true` or `false`, depending.\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Parameters:")),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(n.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(n.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",b({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"pluginId")),Object(n.b)("td",b({parentName:"tr"},{align:null}),"string"),Object(n.b)("td",b({parentName:"tr"},{align:null}),"A unique ",Object(n.b)("a",b({parentName:"td"},{href:"https://nodejs.org/api/modules.html#modules_module_id"}),"module ID"))))),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns:")," ",Object(n.b)("em",{parentName:"p"},"boolean")),Object(n.b)("hr",null),Object(n.b)("h3",{id:"loadconfig"},"loadConfig"),Object(n.b)("p",null,"▸ ",Object(n.b)("strong",{parentName:"p"},"loadConfig"),"(",Object(n.b)("inlineCode",{parentName:"p"},"config"),": any): ",Object(n.b)("em",{parentName:"p"},"Observable‹any›")),Object(n.b)("p",null,"Emits normalized config objects from raw config objects. Only a single input config should be necessary."),Object(n.b)("p",null,"Example:"),Object(n.b)("pre",null,Object(n.b)("code",b({parentName:"pre"},{className:"language-js"}),"const {loadConfig} = require('@report-toolkit/core').observable;\n\n// or require('./path/to/.rtkrc.js')\nconst rawConfig = [\n  'report-toolkit:recommended',\n  {\n    rules: {\n      'long-timeout': {\n        timeout: '2s'\n      }\n    }\n  }\n];\n\nloadConfig(rawConfig).subscribe(normalizedConfig => {\n  // `normalizedConfig` contains contents of \"recommended\" settings,\n  // with our override of custom rule config\n});\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},Object(n.b)("inlineCode",{parentName:"strong"},"todo"))," ALWAYS load builtin plugin(s)"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},Object(n.b)("inlineCode",{parentName:"strong"},"todo"))," Document config shape"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Parameters:")),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(n.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(n.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",b({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"config")),Object(n.b)("td",b({parentName:"tr"},{align:null}),"any"),Object(n.b)("td",b({parentName:"tr"},{align:null}),"Raw config object")))),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns:")," ",Object(n.b)("em",{parentName:"p"},"Observable‹any›")),Object(n.b)("p",null,"Normalized config object(s)"),Object(n.b)("hr",null),Object(n.b)("h3",{id:"registeredruledefinitions"},"registeredRuleDefinitions"),Object(n.b)("p",null,"▸ ",Object(n.b)("strong",{parentName:"p"},"registeredRuleDefinitions"),"(): ",Object(n.b)("em",{parentName:"p"},"object[]")),Object(n.b)("p",null,"Get a list of rule definitions contained within registered plugins."),Object(n.b)("p",null,"Example:"),Object(n.b)("pre",null,Object(n.b)("code",b({parentName:"pre"},{className:"language-js"}),"const {registeredRuleDefinitions} = require('@report-toolkit/core').observable;\n\nregisteredRuleDefinitions().forEach(ruleDef => {\n  console.log(ruleDef.meta.id);\n})\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns:")," ",Object(n.b)("em",{parentName:"p"},"object[]")),Object(n.b)("hr",null),Object(n.b)("h3",{id:"toreportfromobject"},"toReportFromObject"),Object(n.b)("p",null,"▸ ",Object(n.b)("strong",{parentName:"p"},"toReportFromObject"),"(",Object(n.b)("inlineCode",{parentName:"p"},"opts?"),": Partial‹",Object(n.b)("a",b({parentName:"p"},{href:"report_toolkit_core.observable#toreportfromobjectoptions"}),"ToReportFromObjectOptions"),"›): ",Object(n.b)("em",{parentName:"p"},"OperatorFunction‹any, Readonly‹",Object(n.b)("a",b({parentName:"em"},{href:"../classes/report_toolkit_common.report.report"}),"Report"),"››")),Object(n.b)("p",null,"Creates a target ",Object(n.b)("inlineCode",{parentName:"p"},"Observable")," of ",Object(n.b)("a",b({parentName:"p"},{href:"/report-toolkit/e9b585c4ce3ac49558b924b9fc57da41/report_toolkit_common.report.report.mdx"}),"Report")," objects from a source ",Object(n.b)("inlineCode",{parentName:"p"},"Observable")," of plain objects (usually parsed from a JSON report)."),Object(n.b)("p",null,"Example:"),Object(n.b)("pre",null,Object(n.b)("code",b({parentName:"pre"},{className:"language-js"}),"const {toReportFromObject} = require('@report-toolkit/core').observable;\n\nconst json = fs.readFileSync('./report-xxxxx.json');\ntoReportFromObject(json, {\n  showSecretsUnsafe: false\n}).subscribe(report => {\n // `Report` instance with secrets redacted\n});\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Parameters:")),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(n.b)("th",b({parentName:"tr"},{align:null}),"Type"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",b({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"opts?")),Object(n.b)("td",b({parentName:"tr"},{align:null}),"Partial‹",Object(n.b)("a",b({parentName:"td"},{href:"report_toolkit_core.observable#toreportfromobjectoptions"}),"ToReportFromObjectOptions"),"›")))),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns:")," ",Object(n.b)("em",{parentName:"p"},"OperatorFunction‹any, Readonly‹",Object(n.b)("a",b({parentName:"em"},{href:"../classes/report_toolkit_common.report.report"}),"Report"),"››")),Object(n.b)("hr",null),Object(n.b)("h3",{id:"transform"},"transform"),Object(n.b)("p",null,"▸ ",Object(n.b)("strong",{parentName:"p"},"transform"),"(",Object(n.b)("inlineCode",{parentName:"p"},"source"),": Observable‹any›, ",Object(n.b)("inlineCode",{parentName:"p"},"opts?"),": Partial‹",Object(n.b)("a",b({parentName:"p"},{href:"report_toolkit_core.observable#transformoptions"}),"TransformOptions"),"›): ",Object(n.b)("em",{parentName:"p"},"OperatorFunction‹",Object(n.b)("a",b({parentName:"em"},{href:"report_toolkit_core.observable#transformerblueprint"}),"TransformerBlueprint"),", any›")),Object(n.b)("p",null,"Run ",Object(n.b)("inlineCode",{parentName:"p"},"source")," through chain of one or more transformers.  Pipe ",Object(n.b)("a",b({parentName:"p"},{href:"report_toolkit_core.observable.mdx#fromtransformerchain"}),"fromTransformerChain")," into this.\nPerforms validation before piping.\nWhile most other functions here will automatically convert a raw report into a ",Object(n.b)("inlineCode",{parentName:"p"},"Report")," instance for further processing, this one does not (since transformers don’t necessarily accept them).  You’ll need to do this manually, as seen in the below example.\nIf the final transformer does not output the desired ",Object(n.b)("inlineCode",{parentName:"p"},"endType"),", the ",Object(n.b)("inlineCode",{parentName:"p"},"defaultTransformer")," will be appended to the chain; otherwise it is ignored."),Object(n.b)("p",null,"Example:"),Object(n.b)("pre",null,Object(n.b)("code",b({parentName:"pre"},{className:"language-js"}),"const {fromTransformerChain, transform, toReportFromObject} = require('@report-toolkit/core').observable;\n\nconst report$ = toReportFromObject(process.report.getReport());\nfromTransformerChain(['filter', 'csv'], {\n  transformers: {\n    filter: {include: 'header'},\n    csv: {flatten: true}\n  }\n}).pipe(transform(report$)).subscribe(line => {\n  console.log(line);\n});\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Parameters:")),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(n.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(n.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",b({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"source")),Object(n.b)("td",b({parentName:"tr"},{align:null}),"Observable‹any›"),Object(n.b)("td",b({parentName:"tr"},{align:null}),"Source data to transform.  Objects, ",Object(n.b)("a",b({parentName:"td"},{href:"/report-toolkit/e9b585c4ce3ac49558b924b9fc57da41/report_toolkit_common.report.report.mdx"}),"Reports"),", etc.")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",b({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"opts?")),Object(n.b)("td",b({parentName:"tr"},{align:null}),"Partial‹",Object(n.b)("a",b({parentName:"td"},{href:"report_toolkit_core.observable#transformoptions"}),"TransformOptions"),"›"),Object(n.b)("td",b({parentName:"tr"},{align:null}),"-")))),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns:")," ",Object(n.b)("em",{parentName:"p"},"OperatorFunction‹",Object(n.b)("a",b({parentName:"em"},{href:"report_toolkit_core.observable#transformerblueprint"}),"TransformerBlueprint"),", any›")),Object(n.b)("p",null,"Result of running ",Object(n.b)("inlineCode",{parentName:"p"},"source")," through the transformer chains."),Object(n.b)("hr",null),Object(n.b)("h3",{id:"use"},"use"),Object(n.b)("p",null,"▸ ",Object(n.b)("strong",{parentName:"p"},"use"),"(",Object(n.b)("inlineCode",{parentName:"p"},"pluginId"),": string): ",Object(n.b)("em",{parentName:"p"},"Observable‹",Object(n.b)("a",b({parentName:"em"},{href:"report_toolkit_core.observable#rtkplugin"}),"RTKPlugin"),"›")),Object(n.b)("p",null,"Register & enable a plugin."),Object(n.b)("p",null,"Example:"),Object(n.b)("pre",null,Object(n.b)("code",b({parentName:"pre"},{className:"language-js"}),"const {use} = require('@report-toolkit/core').observable;\n\nuse('some-plugin-in-node_modules').subscribe();\n\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Parameters:")),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(n.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(n.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",b({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"pluginId")),Object(n.b)("td",b({parentName:"tr"},{align:null}),"string"),Object(n.b)("td",b({parentName:"tr"},{align:null}),"ID of plugin to register; a resolvable path to a module")))),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns:")," ",Object(n.b)("em",{parentName:"p"},"Observable‹",Object(n.b)("a",b({parentName:"em"},{href:"report_toolkit_core.observable#rtkplugin"}),"RTKPlugin"),"›")),Object(n.b)("p",null,"A plugin instance, but YAGNI."))}m.isMDXComponent=!0},419:function(e){e.exports=JSON.parse('{"data":{"site":{"pathPrefix":"/report-toolkit"}}}')},420:function(e){e.exports=JSON.parse('{"data":{"site":{"siteMetadata":{"repository":{"baseUrl":"https://github.com/IBM/report-toolkit","subDirectory":"packages/docs"}}}}}')},421:function(e,t,r){"use strict";r(31),r(28);var n=r(1),a=r(419),b=r(0),o=r.n(b),l=r(110),p=r.n(l),c=r(205),i=r(131),s=r(3),m=r.n(s),O=r(396),j=function(e){var t,r=e.title,a=e.tabs,b=void 0===a?[]:a;return Object(n.b)("div",{className:m()(O.pageHeader,(t={},t[O.withTabs]=b.length,t))},Object(n.b)("div",{className:"bx--grid"},Object(n.b)("div",{className:"bx--row"},Object(n.b)("div",{className:"bx--col-lg-12"},Object(n.b)("h1",{id:"page-title",className:O.text},r)))))},u=r(420),d=r(397),N=function(e){var t=e.relativePagePath,r=e.repository,a=u.data.site.siteMetadata.repository,b=r||a,o=b.baseUrl,l=o+"/tree/master"+b.subDirectory+"/src/pages"+t;return o?Object(n.b)("div",{className:"bx--row "+d.row},Object(n.b)("div",{className:"bx--col"},Object(n.b)("a",{className:d.link,href:l},"Edit this page on GitHub"))):null},g=r(203),f=(r(59),r(27)),h=r(398);var y=function(e){var t,r;function a(){return e.apply(this,arguments)||this}return r=e,(t=a).prototype=Object.create(r.prototype),t.prototype.constructor=t,t.__proto__=r,a.prototype.render=function(){var e=this.props,t=e.tabs,r=e.slug,a=r.split("/").filter(Boolean).slice(-1)[0],b=t.map((function(e){var t,b=p()(e,{lower:!0}),o=b===a,l=new RegExp(a+"(?!-)"),c=r.replace(l,b);return Object(n.b)("li",{key:e,className:m()((t={},t[h.selectedItem]=o,t),h.listItem)},Object(n.b)(f.Link,{className:h.link,to:""+c},e))}));return Object(n.b)("div",{className:h.tabsContainer},Object(n.b)("div",{className:"bx--grid"},Object(n.b)("div",{className:"bx--row"},Object(n.b)("div",{className:"bx--col-lg-12 bx--col-no-gutter"},Object(n.b)("nav",null,Object(n.b)("ul",{className:h.list},b))))))},a}(o.a.Component),v=r(204);t.a=function(e){var t=e.pageContext,r=e.children,b=e.location,o=e.Title,l=t.frontmatter,s=void 0===l?{}:l,m=t.relativePagePath,O=t.titleType,u=s.tabs,d=s.title,f=s.theme,h=s.description,_=s.keywords,k=a.data.site.pathPrefix,C=k?b.pathname.replace(k,""):b.pathname,R=u?C.split("/").slice(-1)[0]||p()(u[0],{lower:!0}):"";return Object(n.b)(i.a,{homepage:!1,theme:f,pageTitle:d,pageDescription:h,pageKeywords:_,titleType:O},Object(n.b)(j,{title:o?Object(n.b)(o,null):d,label:"label",tabs:u}),u&&Object(n.b)(y,{slug:C,tabs:u,currentTab:R}),Object(n.b)(v.a,{padded:!0},r,Object(n.b)(N,{relativePagePath:m})),Object(n.b)(g.a,{pageContext:t,location:b,slug:C,tabs:u,currentTab:R}),Object(n.b)(c.a,null))}}}]);
//# sourceMappingURL=component---src-pages-api-modules-report-toolkit-core-observable-mdx-60e59f74fe5bb7e5e4a3.js.map