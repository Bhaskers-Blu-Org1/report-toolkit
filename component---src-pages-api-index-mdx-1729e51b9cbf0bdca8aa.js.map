{"version":3,"sources":["webpack:///./src/pages/api/index.mdx","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack:///./node_modules/gatsby-theme-carbon/src/templates/Default.js"],"names":["_frontmatter","makeShortcode","name","props","console","warn","Breadcrumb","BreadcrumbItem","PageDescription","Metadata","InlineNotification","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","noTrailingSlash","href","prop","kind","parentName","isMDXComponent","PageHeader","title","tabs","className","cx","pageHeader","withTabs","length","id","text","EditLink","relativePagePath","repositoryProp","repository","site","siteMetadata","baseUrl","subDirectory","row","link","PageTabs","render","this","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","selected","currentTabRegex","RegExp","replace","key","selectedItem","listItem","to","tabsContainer","list","React","Component","Default","pageContext","children","location","Title","frontmatter","titleType","theme","description","keywords","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","label","Main","padded","NextPrevious","BackToTopBtn"],"mappings":"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","file":"component---src-pages-api-index-mdx-1729e51b9cbf0bdca8aa.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/boneskull/projects/boneskull/report-toolkit/packages/docs/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Breadcrumb = makeShortcode(\"Breadcrumb\");\nconst BreadcrumbItem = makeShortcode(\"BreadcrumbItem\");\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst Metadata = makeShortcode(\"Metadata\");\nconst InlineNotification = makeShortcode(\"InlineNotification\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <Breadcrumb noTrailingSlash mdxType=\"Breadcrumb\">\n      <BreadcrumbItem mdxType=\"BreadcrumbItem\"><a href=\"\">report-toolkit API</a></BreadcrumbItem>\n    </Breadcrumb>\n    {\n      /* this file is not directly ingested by Gatsby; it is used by TypeDoc as a partial in the index file it generates */\n    }\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`Here, you’ll find documentation for `}<Metadata prop=\"packageName\" mdxType=\"Metadata\" />{`’s public, programmatic API.`}</p>\n      <p>{`If you want to use `}<Metadata prop=\"packageName\" mdxType=\"Metadata\" />{` as a library or otherwise embed its functionalities into an app, these docs are for you.`}</p>\n    </PageDescription>\n    <p>{`Below, you’ll find an index of modules comprising the public API.`}</p>\n    <InlineNotification kind=\"warning\" mdxType=\"InlineNotification\">\n      <p>{`At the time of this writing, the list below `}<em parentName=\"p\">{`does not`}</em>{` contain the `}<em parentName=\"p\">{`entirety`}</em>{` of this API—but it’s enough to get started using `}<Metadata prop=\"packageName\" mdxType=\"Metadata\" />{` as a library.`}</p>\n    </InlineNotification>\n    <p><strong parentName=\"p\">{`Hint:`}</strong>{` Start with `}<a parentName=\"p\" {...{\n        \"href\": \"/report-toolkit/api/modules/report_toolkit_core\"\n      }}>{`@report-toolkit/core`}</a>{`!`}</p>\n    <h2 {...{\n      \"id\": \"packages\"\n    }}>{`Packages`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/report-toolkit/api/modules/report_toolkit_common\"\n        }}>{`@report-toolkit/common`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/report-toolkit/api/modules/report_toolkit_core\"\n        }}>{`@report-toolkit/core`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/report-toolkit/api/modules/report-toolkit-inspector\"\n        }}>{`@report-toolkit/inspector`}</a></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { pageHeader, withTabs, text } from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, tabs = [] }) => (\n  <div className={cx(pageHeader, { [withTabs]: tabs.length })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory } = repositoryProp || repository;\n\n  const href = `${baseUrl}/tree/master${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  static propTypes = {\n    tabs: PropTypes.array,\n    slug: PropTypes.string,\n  };\n\n  render() {\n    const { tabs, slug } = this.props;\n    const currentTab = slug\n      .split('/')\n      .filter(Boolean)\n      .slice(-1)[0];\n\n    const pageTabs = tabs.map(tab => {\n      const slugifiedTab = slugify(tab, { lower: true });\n      const selected = slugifiedTab === currentTab;\n      const currentTabRegex = new RegExp(`${currentTab}(?!-)`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport BackToTopBtn from '../components/BackToTopBtn';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const { tabs, title, theme, description, keywords } = frontmatter;\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return slug.split('/').slice(-1)[0] || slugify(tabs[0], { lower: true });\n  };\n\n  const currentTab = getCurrentTab();\n  return (\n    <Layout\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}\n    >\n      <PageHeader title={Title ? <Title /> : title} label=\"label\" tabs={tabs} />\n      {tabs && <PageTabs slug={slug} tabs={tabs} currentTab={currentTab} />}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <BackToTopBtn />\n    </Layout>\n  );\n};\n\nexport default Default;\n"],"sourceRoot":""}