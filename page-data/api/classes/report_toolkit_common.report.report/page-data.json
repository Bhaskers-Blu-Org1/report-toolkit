{"componentChunkName":"component---src-pages-api-classes-report-toolkit-common-report-report-mdx","path":"/api/classes/report_toolkit_common.report.report/","result":{"pageContext":{"frontmatter":{"title":"Report"},"relativePagePath":"/api/classes/report_toolkit_common.report.report.mdx","titleType":"append","MdxNode":{"id":"fd925b09-d57e-5c6c-934b-1d0e920c046f","children":[],"parent":"de77ff6c-b6a4-58fb-b8b6-176cc89cbddc","internal":{"content":"---\ntitle: \"Report\"\n---\n\n<Breadcrumb noTrailingSlash>\n<BreadcrumbItem><a href=\"../../../../../../api\">report-toolkit API</a></BreadcrumbItem>\n<BreadcrumbItem><a href=\"../modules/report_toolkit_common\">@report-toolkit/common</a></BreadcrumbItem>\n<BreadcrumbItem><a href=\"../modules/report_toolkit_common.report\">report</a></BreadcrumbItem>\n<BreadcrumbItem><a href=\"report_toolkit_common.report.report\">Report</a></BreadcrumbItem>\n</Breadcrumb>\n\nRepresents a [Diagnostic Report](https://nodejs.org/api/process.html#process_process_report_getreport_err).\n\n## Hierarchy\n\n* **Report**\n\n## Index\n\n### Constructors\n\n- [constructor](report_toolkit_common.report.report#constructor)\n\n### Properties\n\n- [[kReportFilepath]](report_toolkit_common.report.report#[kreportfilepath])\n- [[kReport]](report_toolkit_common.report.report#[kreport])\n- [environmentVariables](report_toolkit_common.report.report#environmentvariables)\n- [header](report_toolkit_common.report.report#header)\n- [javascriptHeap](report_toolkit_common.report.report#javascriptheap)\n- [javascriptStack](report_toolkit_common.report.report#javascriptstack)\n- [libuv](report_toolkit_common.report.report#libuv)\n- [nativeStack](report_toolkit_common.report.report#nativestack)\n- [resourceUsage](report_toolkit_common.report.report#resourceusage)\n- [sharedObjects](report_toolkit_common.report.report#sharedobjects)\n- [userLimits](report_toolkit_common.report.report#userlimits)\n\n### Accessors\n\n- [filepath](report_toolkit_common.report.report#filepath)\n\n### Methods\n\n- [create](report_toolkit_common.report.report#static-create)\n- [isReport](report_toolkit_common.report.report#static-isreport)\n- [isReportLike](report_toolkit_common.report.report#static-isreportlike)\n\n## Constructors\n\n### constructor\n\n\\+ **new Report**(`report`: [DiagnosticReport](../interfaces/common_diagnostic_report_d_.diagnosticreport), `filepath?`: string): *[Report](report_toolkit_common.report.report)*\n\nCreates shallow copies of root props in `report`; assigns internally-used `Symbol`s.\n\n**Parameters:**\n\nName | Type | Description |\n------ | ------ | ------ |\n`report` | [DiagnosticReport](../interfaces/common_diagnostic_report_d_.diagnosticreport) | Raw object |\n`filepath?` | string | Original filepath of report, if available. Defaults to [NO_FILEPATH](../modules/report_toolkit_common.constants#const-no_filepath)  |\n\n**Returns:** *[Report](report_toolkit_common.report.report)*\n\n## Properties\n\n### [kReportFilepath]\n\n• **[kReportFilepath]**: *string*\n\n___\n\n### [kReport]\n\n• **[kReport]**: *boolean*\n\n___\n\n### environmentVariables\n\n• **environmentVariables**: *object*\n\n#### Type declaration:\n\n- \\[ **x**: *string*\\]: string\n\n___\n\n### header\n\n• **header**: *object*\n\n#### Type declaration:\n\n* **arch**: *string*\n\n* **commandLine**: *string[]*\n\n* **componentVersions**(): *object*\n\n* **cpus**: *[ReportHeaderCpu](../interfaces/common_diagnostic_report_d_.reportheadercpu)[]*\n\n* **cwd**: *string*\n\n* **dumpEventTime**: *string*\n\n* **dumpEventTimeStamp**: *string*\n\n* **event**: *string*\n\n* **filename**: *string*\n\n* **host**: *string*\n\n* **nodejsVersion**: *string*\n\n* **osMachine**: *string*\n\n* **osName**: *string*\n\n* **osRelease**: *string*\n\n* **osVersion**: *string*\n\n* **platform**: *string*\n\n* **processId**: *number*\n\n* **release**(): *object*\n\n  * **headersUrl**: *string*\n\n  * **name**: *string*\n\n  * **sourceUrl**: *string*\n\n* **trigger**: *string*\n\n* **wordSize**: *number*\n\n___\n\n### javascriptHeap\n\n• **javascriptHeap**: *object*\n\n#### Type declaration:\n\n* **availableMemory**: *number*\n\n* **heapSpaces**(): *object*\n\n* **memoryLimit**: *number*\n\n* **totalCommittedMemory**: *number*\n\n* **totalMemory**: *number*\n\n* **usedMemory**: *number*\n\n___\n\n### javascriptStack\n\n• **javascriptStack**: *object*\n\n#### Type declaration:\n\n* **message**: *string*\n\n* **stack**: *string[]*\n\n___\n\n### libuv\n\n• **libuv**: *object[]*\n\n___\n\n### nativeStack\n\n• **nativeStack**: *[NativeStackFrame](../interfaces/common_diagnostic_report_d_.nativestackframe)[]*\n\n___\n\n### resourceUsage\n\n• **resourceUsage**: *object*\n\n#### Type declaration:\n\n* **cpuConsumptionPercent**: *number*\n\n* **fsActivity**(): *object*\n\n  * **reads**: *number*\n\n  * **writes**: *number*\n\n* **kernelCpuSeconds**: *number*\n\n* **maxRss**: *number*\n\n* **pageFaults**(): *object*\n\n  * **IONotRequired**: *number*\n\n  * **IORequired**: *number*\n\n* **userCpuSeconds**: *number*\n\n___\n\n### sharedObjects\n\n• **sharedObjects**: *string[]*\n\n___\n\n### userLimits\n\n• **userLimits**: *object*\n\n#### Type declaration:\n\n- \\[ **x**: *string*\\]: [ReportUserLimit](../interfaces/common_diagnostic_report_d_.reportuserlimit)\n\n## Accessors\n\n### filepath\n\n• **get filepath**(): *string*\n\nOriginal filepath of report, if available. Defaults to [NO_FILEPATH](../modules/report_toolkit_common.constants#const-no_filepath).\n\n**Returns:** *string*\n\n## Methods\n\n### `Static` create\n\n▸ **create**(`rawReport`: [DiagnosticReport](../interfaces/common_diagnostic_report_d_.diagnosticreport) | [Report](report_toolkit_common.report.report), `filepath`: string): *Readonly‹[Report](report_toolkit_common.report.report)›*\n\nCreates a read-only [Report](report_toolkit_common.report.report.mdx) from a [ReportLike](../modules/report_toolkit_common.report#reportlike) value.\nUse this instead of `new Report()`!\n\n**Parameters:**\n\nName | Type | Description |\n------ | ------ | ------ |\n`rawReport` | [DiagnosticReport](../interfaces/common_diagnostic_report_d_.diagnosticreport) &#124; [Report](report_toolkit_common.report.report) | - |\n`filepath` | string |   |\n\n**Returns:** *Readonly‹[Report](report_toolkit_common.report.report)›*\n\n___\n\n### `Static` isReport\n\n▸ **isReport**(`value`: any): *boolean*\n\nReturns `true` if the value is an object having a property `report-toolkit-report` `Symbol` with value `true`.\n\n**Parameters:**\n\nName | Type | Description |\n------ | ------ | ------ |\n`value` | any |   |\n\n**Returns:** *boolean*\n\n___\n\n### `Static` isReportLike\n\n▸ **isReportLike**(`value`: any): *boolean*\n\nReturns `true` if `value` has all expected root properties of a Diagnostic Report (as returned by [process.report.getReport()](https://nodejs.org/api/process.html#process_process_report_getreport_err)), or is a [Report](report_toolkit_common.report.report.mdx).\n\n**Parameters:**\n\nName | Type | Description |\n------ | ------ | ------ |\n`value` | any |   |\n\n**Returns:** *boolean*\n\n","type":"Mdx","contentDigest":"1e0153508bac761c49012f202116550f","counter":124,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"Report"},"exports":{},"rawBody":"---\ntitle: \"Report\"\n---\n\n<Breadcrumb noTrailingSlash>\n<BreadcrumbItem><a href=\"../../../../../../api\">report-toolkit API</a></BreadcrumbItem>\n<BreadcrumbItem><a href=\"../modules/report_toolkit_common\">@report-toolkit/common</a></BreadcrumbItem>\n<BreadcrumbItem><a href=\"../modules/report_toolkit_common.report\">report</a></BreadcrumbItem>\n<BreadcrumbItem><a href=\"report_toolkit_common.report.report\">Report</a></BreadcrumbItem>\n</Breadcrumb>\n\nRepresents a [Diagnostic Report](https://nodejs.org/api/process.html#process_process_report_getreport_err).\n\n## Hierarchy\n\n* **Report**\n\n## Index\n\n### Constructors\n\n- [constructor](report_toolkit_common.report.report#constructor)\n\n### Properties\n\n- [[kReportFilepath]](report_toolkit_common.report.report#[kreportfilepath])\n- [[kReport]](report_toolkit_common.report.report#[kreport])\n- [environmentVariables](report_toolkit_common.report.report#environmentvariables)\n- [header](report_toolkit_common.report.report#header)\n- [javascriptHeap](report_toolkit_common.report.report#javascriptheap)\n- [javascriptStack](report_toolkit_common.report.report#javascriptstack)\n- [libuv](report_toolkit_common.report.report#libuv)\n- [nativeStack](report_toolkit_common.report.report#nativestack)\n- [resourceUsage](report_toolkit_common.report.report#resourceusage)\n- [sharedObjects](report_toolkit_common.report.report#sharedobjects)\n- [userLimits](report_toolkit_common.report.report#userlimits)\n\n### Accessors\n\n- [filepath](report_toolkit_common.report.report#filepath)\n\n### Methods\n\n- [create](report_toolkit_common.report.report#static-create)\n- [isReport](report_toolkit_common.report.report#static-isreport)\n- [isReportLike](report_toolkit_common.report.report#static-isreportlike)\n\n## Constructors\n\n### constructor\n\n\\+ **new Report**(`report`: [DiagnosticReport](../interfaces/common_diagnostic_report_d_.diagnosticreport), `filepath?`: string): *[Report](report_toolkit_common.report.report)*\n\nCreates shallow copies of root props in `report`; assigns internally-used `Symbol`s.\n\n**Parameters:**\n\nName | Type | Description |\n------ | ------ | ------ |\n`report` | [DiagnosticReport](../interfaces/common_diagnostic_report_d_.diagnosticreport) | Raw object |\n`filepath?` | string | Original filepath of report, if available. Defaults to [NO_FILEPATH](../modules/report_toolkit_common.constants#const-no_filepath)  |\n\n**Returns:** *[Report](report_toolkit_common.report.report)*\n\n## Properties\n\n### [kReportFilepath]\n\n• **[kReportFilepath]**: *string*\n\n___\n\n### [kReport]\n\n• **[kReport]**: *boolean*\n\n___\n\n### environmentVariables\n\n• **environmentVariables**: *object*\n\n#### Type declaration:\n\n- \\[ **x**: *string*\\]: string\n\n___\n\n### header\n\n• **header**: *object*\n\n#### Type declaration:\n\n* **arch**: *string*\n\n* **commandLine**: *string[]*\n\n* **componentVersions**(): *object*\n\n* **cpus**: *[ReportHeaderCpu](../interfaces/common_diagnostic_report_d_.reportheadercpu)[]*\n\n* **cwd**: *string*\n\n* **dumpEventTime**: *string*\n\n* **dumpEventTimeStamp**: *string*\n\n* **event**: *string*\n\n* **filename**: *string*\n\n* **host**: *string*\n\n* **nodejsVersion**: *string*\n\n* **osMachine**: *string*\n\n* **osName**: *string*\n\n* **osRelease**: *string*\n\n* **osVersion**: *string*\n\n* **platform**: *string*\n\n* **processId**: *number*\n\n* **release**(): *object*\n\n  * **headersUrl**: *string*\n\n  * **name**: *string*\n\n  * **sourceUrl**: *string*\n\n* **trigger**: *string*\n\n* **wordSize**: *number*\n\n___\n\n### javascriptHeap\n\n• **javascriptHeap**: *object*\n\n#### Type declaration:\n\n* **availableMemory**: *number*\n\n* **heapSpaces**(): *object*\n\n* **memoryLimit**: *number*\n\n* **totalCommittedMemory**: *number*\n\n* **totalMemory**: *number*\n\n* **usedMemory**: *number*\n\n___\n\n### javascriptStack\n\n• **javascriptStack**: *object*\n\n#### Type declaration:\n\n* **message**: *string*\n\n* **stack**: *string[]*\n\n___\n\n### libuv\n\n• **libuv**: *object[]*\n\n___\n\n### nativeStack\n\n• **nativeStack**: *[NativeStackFrame](../interfaces/common_diagnostic_report_d_.nativestackframe)[]*\n\n___\n\n### resourceUsage\n\n• **resourceUsage**: *object*\n\n#### Type declaration:\n\n* **cpuConsumptionPercent**: *number*\n\n* **fsActivity**(): *object*\n\n  * **reads**: *number*\n\n  * **writes**: *number*\n\n* **kernelCpuSeconds**: *number*\n\n* **maxRss**: *number*\n\n* **pageFaults**(): *object*\n\n  * **IONotRequired**: *number*\n\n  * **IORequired**: *number*\n\n* **userCpuSeconds**: *number*\n\n___\n\n### sharedObjects\n\n• **sharedObjects**: *string[]*\n\n___\n\n### userLimits\n\n• **userLimits**: *object*\n\n#### Type declaration:\n\n- \\[ **x**: *string*\\]: [ReportUserLimit](../interfaces/common_diagnostic_report_d_.reportuserlimit)\n\n## Accessors\n\n### filepath\n\n• **get filepath**(): *string*\n\nOriginal filepath of report, if available. Defaults to [NO_FILEPATH](../modules/report_toolkit_common.constants#const-no_filepath).\n\n**Returns:** *string*\n\n## Methods\n\n### `Static` create\n\n▸ **create**(`rawReport`: [DiagnosticReport](../interfaces/common_diagnostic_report_d_.diagnosticreport) | [Report](report_toolkit_common.report.report), `filepath`: string): *Readonly‹[Report](report_toolkit_common.report.report)›*\n\nCreates a read-only [Report](report_toolkit_common.report.report.mdx) from a [ReportLike](../modules/report_toolkit_common.report#reportlike) value.\nUse this instead of `new Report()`!\n\n**Parameters:**\n\nName | Type | Description |\n------ | ------ | ------ |\n`rawReport` | [DiagnosticReport](../interfaces/common_diagnostic_report_d_.diagnosticreport) &#124; [Report](report_toolkit_common.report.report) | - |\n`filepath` | string |   |\n\n**Returns:** *Readonly‹[Report](report_toolkit_common.report.report)›*\n\n___\n\n### `Static` isReport\n\n▸ **isReport**(`value`: any): *boolean*\n\nReturns `true` if the value is an object having a property `report-toolkit-report` `Symbol` with value `true`.\n\n**Parameters:**\n\nName | Type | Description |\n------ | ------ | ------ |\n`value` | any |   |\n\n**Returns:** *boolean*\n\n___\n\n### `Static` isReportLike\n\n▸ **isReportLike**(`value`: any): *boolean*\n\nReturns `true` if `value` has all expected root properties of a Diagnostic Report (as returned by [process.report.getReport()](https://nodejs.org/api/process.html#process_process_report_getreport_err)), or is a [Report](report_toolkit_common.report.report.mdx).\n\n**Parameters:**\n\nName | Type | Description |\n------ | ------ | ------ |\n`value` | any |   |\n\n**Returns:** *boolean*\n\n","fileAbsolutePath":"/Users/boneskull/projects/boneskull/report-toolkit/packages/docs/src/pages/api/classes/report_toolkit_common.report.report.mdx"}}}}