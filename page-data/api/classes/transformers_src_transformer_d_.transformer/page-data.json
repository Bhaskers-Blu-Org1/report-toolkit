{"componentChunkName":"component---src-pages-api-classes-transformers-src-transformer-d-transformer-mdx","path":"/api/classes/transformers_src_transformer_d_.transformer/","result":{"pageContext":{"frontmatter":{"title":"Transformer"},"relativePagePath":"/api/classes/transformers_src_transformer_d_.transformer.mdx","titleType":"append","MdxNode":{"id":"36f8c4da-e0b6-5561-a28c-f377db17ccaa","children":[],"parent":"217f07cb-6abe-5978-aa96-fa4221ac85df","internal":{"content":"---\ntitle: \"Transformer\"\n---\n\n<Breadcrumb noTrailingSlash>\n<BreadcrumbItem><a href=\"../../../../../../api\">report-toolkit API</a></BreadcrumbItem>\n<BreadcrumbItem><a href=\"../modules/transformers_src_transformer_d_\">\"transformers/src/transformer.d\"</a></BreadcrumbItem>\n<BreadcrumbItem><a href=\"transformers_src_transformer_d_.transformer\">Transformer</a></BreadcrumbItem>\n</Breadcrumb>\n\nRepresents a Transformer having a transform() function and\nmetadata.\n\n**`template`** T,U\n\n## Type parameters\n\n▪ **T**\n\n▪ **U**\n\n## Hierarchy\n\n* **Transformer**\n\n## Index\n\n### Constructors\n\n- [constructor](transformers_src_transformer_d_.transformer#constructor)\n\n### Properties\n\n- [_meta](transformers_src_transformer_d_.transformer#_meta)\n- [_source](transformers_src_transformer_d_.transformer#_source)\n- [_transform](transformers_src_transformer_d_.transformer#_transform)\n- [normalizeFields](transformers_src_transformer_d_.transformer#static-normalizefields)\n\n### Accessors\n\n- [defaults](transformers_src_transformer_d_.transformer#defaults)\n- [id](transformers_src_transformer_d_.transformer#id)\n- [input](transformers_src_transformer_d_.transformer#input)\n- [output](transformers_src_transformer_d_.transformer#output)\n\n### Methods\n\n- [canBeginWith](transformers_src_transformer_d_.transformer#canbeginwith)\n- [canEndWith](transformers_src_transformer_d_.transformer#canendwith)\n- [canPipeTo](transformers_src_transformer_d_.transformer#canpipeto)\n- [pipe](transformers_src_transformer_d_.transformer#pipe)\n- [pipeFrom](transformers_src_transformer_d_.transformer#pipefrom)\n- [transform](transformers_src_transformer_d_.transformer#transform)\n\n## Constructors\n\n### constructor\n\n\\+ **new Transformer**(`transform`: function, `meta`: object, `config?`: any): *[Transformer](transformers_src_transformer_d_.transformer)*\n\nSets defaults and instance props\n\n**Parameters:**\n\n▪ **transform**: *function*\n\n▸ (`opts?`: any): *OperatorFunction‹T, U›*\n\n**Parameters:**\n\nName | Type |\n------ | ------ |\n`opts?` | any |\n\n▪ **meta**: *object*\n\nTransformer metdata\n\nName | Type |\n------ | ------ |\n`alias?` | string[] |\n`defaults?` | any |\n`description?` | string |\n`id` | string |\n`input?` | string[] |\n`output` | string |\n\n▪`Optional`  **config**: *any*\n\n**Returns:** *[Transformer](transformers_src_transformer_d_.transformer)*\n\n## Properties\n\n### _meta\n\n• **_meta**: *any*\n\n___\n\n### _source\n\n• **_source**: *[Transformer](transformers_src_transformer_d_.transformer)‹any, any›*\n\n___\n\n### _transform\n\n• **_transform**: *function*\n\n#### Type declaration:\n\n▸ (`opts?`: any): *OperatorFunction‹T, U›*\n\n**Parameters:**\n\nName | Type |\n------ | ------ |\n`opts?` | any |\n\n___\n\n### `Static` normalizeFields\n\n▪ **normalizeFields**: *function*\n\n#### Type declaration:\n\n▸ (...`args`: any[]): *any*\n\n**Parameters:**\n\nName | Type |\n------ | ------ |\n`...args` | any[] |\n\n## Accessors\n\n### defaults\n\n• **get defaults**(): *any*\n\n**Returns:** *any*\n\n___\n\n### id\n\n• **get id**(): *any*\n\n**Returns:** *any*\n\n___\n\n### input\n\n• **get input**(): *any*\n\n**Returns:** *any*\n\n___\n\n### output\n\n• **get output**(): *any*\n\n**Returns:** *any*\n\n## Methods\n\n### canBeginWith\n\n▸ **canBeginWith**(`type`: any): *function*\n\n**Parameters:**\n\nName | Type |\n------ | ------ |\n`type` | any |\n\n**Returns:** *function*\n\n▸ (`target`: T): *boolean*\n\n**Parameters:**\n\nName | Type |\n------ | ------ |\n`target` | T |\n\n___\n\n### canEndWith\n\n▸ **canEndWith**(`type`: any): *boolean*\n\n**Parameters:**\n\nName | Type |\n------ | ------ |\n`type` | any |\n\n**Returns:** *boolean*\n\n___\n\n### canPipeTo\n\n▸ **canPipeTo**(`transformer`: [Transformer](transformers_src_transformer_d_.transformer)‹any, any›): *function*\n\nReturns `true` if this Transformer can pipe to another\n\n**Parameters:**\n\nName | Type | Description |\n------ | ------ | ------ |\n`transformer` | [Transformer](transformers_src_transformer_d_.transformer)‹any, any› | Transformer to compare  |\n\n**Returns:** *function*\n\n▸ (`target`: T): *boolean*\n\n**Parameters:**\n\nName | Type |\n------ | ------ |\n`target` | T |\n\n___\n\n### pipe\n\n▸ **pipe**(`transformer`: [Transformer](transformers_src_transformer_d_.transformer)‹any, any›): *[Transformer](transformers_src_transformer_d_.transformer)‹any, any›*\n\nPipe one Transformer to another\n\n**Parameters:**\n\nName | Type |\n------ | ------ |\n`transformer` | [Transformer](transformers_src_transformer_d_.transformer)‹any, any› |\n\n**Returns:** *[Transformer](transformers_src_transformer_d_.transformer)‹any, any›*\n\n___\n\n### pipeFrom\n\n▸ **pipeFrom**(`transformer`: [Transformer](transformers_src_transformer_d_.transformer)‹any, any›): *[Transformer](transformers_src_transformer_d_.transformer)‹any, any›*\n\n**Parameters:**\n\nName | Type |\n------ | ------ |\n`transformer` | [Transformer](transformers_src_transformer_d_.transformer)‹any, any› |\n\n**Returns:** *[Transformer](transformers_src_transformer_d_.transformer)‹any, any›*\n\n___\n\n### transform\n\n▸ **transform**(): *OperatorFunction‹T, U›*\n\n**Returns:** *OperatorFunction‹T, U›*\n\n","type":"Mdx","contentDigest":"6730b12cf2bf4a957de307e0ac44d72b","counter":125,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"Transformer"},"exports":{},"rawBody":"---\ntitle: \"Transformer\"\n---\n\n<Breadcrumb noTrailingSlash>\n<BreadcrumbItem><a href=\"../../../../../../api\">report-toolkit API</a></BreadcrumbItem>\n<BreadcrumbItem><a href=\"../modules/transformers_src_transformer_d_\">\"transformers/src/transformer.d\"</a></BreadcrumbItem>\n<BreadcrumbItem><a href=\"transformers_src_transformer_d_.transformer\">Transformer</a></BreadcrumbItem>\n</Breadcrumb>\n\nRepresents a Transformer having a transform() function and\nmetadata.\n\n**`template`** T,U\n\n## Type parameters\n\n▪ **T**\n\n▪ **U**\n\n## Hierarchy\n\n* **Transformer**\n\n## Index\n\n### Constructors\n\n- [constructor](transformers_src_transformer_d_.transformer#constructor)\n\n### Properties\n\n- [_meta](transformers_src_transformer_d_.transformer#_meta)\n- [_source](transformers_src_transformer_d_.transformer#_source)\n- [_transform](transformers_src_transformer_d_.transformer#_transform)\n- [normalizeFields](transformers_src_transformer_d_.transformer#static-normalizefields)\n\n### Accessors\n\n- [defaults](transformers_src_transformer_d_.transformer#defaults)\n- [id](transformers_src_transformer_d_.transformer#id)\n- [input](transformers_src_transformer_d_.transformer#input)\n- [output](transformers_src_transformer_d_.transformer#output)\n\n### Methods\n\n- [canBeginWith](transformers_src_transformer_d_.transformer#canbeginwith)\n- [canEndWith](transformers_src_transformer_d_.transformer#canendwith)\n- [canPipeTo](transformers_src_transformer_d_.transformer#canpipeto)\n- [pipe](transformers_src_transformer_d_.transformer#pipe)\n- [pipeFrom](transformers_src_transformer_d_.transformer#pipefrom)\n- [transform](transformers_src_transformer_d_.transformer#transform)\n\n## Constructors\n\n### constructor\n\n\\+ **new Transformer**(`transform`: function, `meta`: object, `config?`: any): *[Transformer](transformers_src_transformer_d_.transformer)*\n\nSets defaults and instance props\n\n**Parameters:**\n\n▪ **transform**: *function*\n\n▸ (`opts?`: any): *OperatorFunction‹T, U›*\n\n**Parameters:**\n\nName | Type |\n------ | ------ |\n`opts?` | any |\n\n▪ **meta**: *object*\n\nTransformer metdata\n\nName | Type |\n------ | ------ |\n`alias?` | string[] |\n`defaults?` | any |\n`description?` | string |\n`id` | string |\n`input?` | string[] |\n`output` | string |\n\n▪`Optional`  **config**: *any*\n\n**Returns:** *[Transformer](transformers_src_transformer_d_.transformer)*\n\n## Properties\n\n### _meta\n\n• **_meta**: *any*\n\n___\n\n### _source\n\n• **_source**: *[Transformer](transformers_src_transformer_d_.transformer)‹any, any›*\n\n___\n\n### _transform\n\n• **_transform**: *function*\n\n#### Type declaration:\n\n▸ (`opts?`: any): *OperatorFunction‹T, U›*\n\n**Parameters:**\n\nName | Type |\n------ | ------ |\n`opts?` | any |\n\n___\n\n### `Static` normalizeFields\n\n▪ **normalizeFields**: *function*\n\n#### Type declaration:\n\n▸ (...`args`: any[]): *any*\n\n**Parameters:**\n\nName | Type |\n------ | ------ |\n`...args` | any[] |\n\n## Accessors\n\n### defaults\n\n• **get defaults**(): *any*\n\n**Returns:** *any*\n\n___\n\n### id\n\n• **get id**(): *any*\n\n**Returns:** *any*\n\n___\n\n### input\n\n• **get input**(): *any*\n\n**Returns:** *any*\n\n___\n\n### output\n\n• **get output**(): *any*\n\n**Returns:** *any*\n\n## Methods\n\n### canBeginWith\n\n▸ **canBeginWith**(`type`: any): *function*\n\n**Parameters:**\n\nName | Type |\n------ | ------ |\n`type` | any |\n\n**Returns:** *function*\n\n▸ (`target`: T): *boolean*\n\n**Parameters:**\n\nName | Type |\n------ | ------ |\n`target` | T |\n\n___\n\n### canEndWith\n\n▸ **canEndWith**(`type`: any): *boolean*\n\n**Parameters:**\n\nName | Type |\n------ | ------ |\n`type` | any |\n\n**Returns:** *boolean*\n\n___\n\n### canPipeTo\n\n▸ **canPipeTo**(`transformer`: [Transformer](transformers_src_transformer_d_.transformer)‹any, any›): *function*\n\nReturns `true` if this Transformer can pipe to another\n\n**Parameters:**\n\nName | Type | Description |\n------ | ------ | ------ |\n`transformer` | [Transformer](transformers_src_transformer_d_.transformer)‹any, any› | Transformer to compare  |\n\n**Returns:** *function*\n\n▸ (`target`: T): *boolean*\n\n**Parameters:**\n\nName | Type |\n------ | ------ |\n`target` | T |\n\n___\n\n### pipe\n\n▸ **pipe**(`transformer`: [Transformer](transformers_src_transformer_d_.transformer)‹any, any›): *[Transformer](transformers_src_transformer_d_.transformer)‹any, any›*\n\nPipe one Transformer to another\n\n**Parameters:**\n\nName | Type |\n------ | ------ |\n`transformer` | [Transformer](transformers_src_transformer_d_.transformer)‹any, any› |\n\n**Returns:** *[Transformer](transformers_src_transformer_d_.transformer)‹any, any›*\n\n___\n\n### pipeFrom\n\n▸ **pipeFrom**(`transformer`: [Transformer](transformers_src_transformer_d_.transformer)‹any, any›): *[Transformer](transformers_src_transformer_d_.transformer)‹any, any›*\n\n**Parameters:**\n\nName | Type |\n------ | ------ |\n`transformer` | [Transformer](transformers_src_transformer_d_.transformer)‹any, any› |\n\n**Returns:** *[Transformer](transformers_src_transformer_d_.transformer)‹any, any›*\n\n___\n\n### transform\n\n▸ **transform**(): *OperatorFunction‹T, U›*\n\n**Returns:** *OperatorFunction‹T, U›*\n\n","fileAbsolutePath":"/Users/boneskull/projects/boneskull/report-toolkit/packages/docs/src/pages/api/classes/transformers_src_transformer_d_.transformer.mdx"}}}}