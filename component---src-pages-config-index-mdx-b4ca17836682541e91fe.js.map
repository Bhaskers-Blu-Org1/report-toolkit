{"version":3,"sources":["webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/NextPrevious/NextPreviousStyles.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/NextPrevious/NextPrevious.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/NextPrevious/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack:///./node_modules/gatsby-theme-carbon/src/templates/Default.js","webpack:///./src/pages/config/index.mdx"],"names":["PageHeader","title","tabs","className","cx","pageHeader","withTabs","length","id","text","EditLink","relativePagePath","repositoryProp","repository","site","siteMetadata","baseUrl","subDirectory","href","branch","row","link","NextPreviousContainer","previousItem","nextItem","wrapper","linkContainer","to","firstLink","direction","name","secondLink","useNavigationList","edges","allNavItemsYaml","pathPrefix","flatMap","node","pages","map","page","category","getName","NextPrevious","props","location","pageContext","frontmatter","navigationList","currentTitle","slugify","lower","getTitle","hrefSegments","pathname","replace","split","filter","Boolean","currentPage","prevTabItem","nextTabItem","tabItems","slug","currentTab","item","toString","currentTabIndex","findIndex","tab","getTabItems","unPrefixedPathname","currentNavigationItem","navIndex","path","includes","prevCategory","nextCategory","useNavigationItems","slice","join","PageTabs","render","this","pageTabs","slugifiedTab","selected","currentTabRegex","RegExp","key","selectedItem","listItem","tabsContainer","list","React","Component","Default","children","Title","titleType","theme","description","keywords","Layout","homepage","pageTitle","pageDescription","pageKeywords","label","Main","padded","BackToTopBtn","_frontmatter","makeShortcode","console","warn","PageDescription","Metadata","AnchorLinks","AnchorLink","InlineNotification","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","prop","small","kind","isMDXComponent"],"mappings":"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","file":"component---src-pages-config-index-mdx-b4ca17836682541e91fe.js","sourcesContent":["import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { pageHeader, withTabs, text } from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, tabs = [] }) => (\n  <div className={cx(pageHeader, { [withTabs]: tabs.length })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport cx from 'classnames';\n\nimport {\n  wrapper,\n  link,\n  direction,\n  name,\n  firstLink,\n  secondLink,\n  linkContainer,\n} from './NextPrevious.module.scss';\n\nconst NextPreviousContainer = ({ previousItem, nextItem }) => (\n  <div className={wrapper}>\n    <div className={linkContainer}>\n      {previousItem.to && (\n        <Link className={cx(link, firstLink)} to={previousItem.to}>\n          <div className={direction}>Previous</div>\n          <div className={name}>{previousItem.name}</div>\n        </Link>\n      )}\n      {nextItem.to && (\n        <Link className={cx(link, secondLink)} to={nextItem.to}>\n          <div className={direction}>Next</div>\n          <div className={name}>{nextItem.name}</div>\n        </Link>\n      )}\n    </div>\n  </div>\n);\n\nexport default NextPreviousContainer;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport slugify from 'slugify';\n\nimport NextPrevious from './NextPreviousStyles';\n\nconst useNavigationList = () => {\n  const {\n    allNavItemsYaml: { edges },\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query NAV_ITEM_QUERY {\n      allNavItemsYaml {\n        edges {\n          node {\n            title\n            pages {\n              title\n              path\n            }\n          }\n        }\n      }\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  return [\n    edges.flatMap(({ node }) =>\n      node.pages.map(page => ({\n        ...page,\n        category: node.title,\n      }))\n    ),\n    pathPrefix,\n  ];\n};\n\nconst getTabItems = ({ tabs, location }) => {\n  const { pathname } = location;\n  const currentPage = pathname.split('/');\n  if (!tabs) {\n    return {\n      prevTabItem: null,\n      nextTabItem: null,\n    };\n  }\n\n  const tabItems = tabs.map(title => {\n    const slug = slugify(title, {\n      lower: true,\n    });\n    const currentTab =\n      currentPage.filter(item => item === slug).toString() === slug;\n    return {\n      title,\n      slug,\n      currentTab,\n    };\n  });\n\n  const currentTabIndex = tabItems.findIndex(tab => tab.currentTab);\n  return {\n    prevTabItem: tabItems[currentTabIndex - 1],\n    nextTabItem: tabItems[currentTabIndex + 1],\n  };\n};\n\nconst useNavigationItems = ({ tabs, location }) => {\n  const [navigationList, pathPrefix] = useNavigationList();\n  const { pathname } = location;\n  const unPrefixedPathname = pathname.replace(pathPrefix, '');\n  const currentNavigationItem = tabs\n    ? unPrefixedPathname.replace(/\\/[^/]*\\/?$/, '') // removes the last url segment\n    : unPrefixedPathname.replace(/\\/$/, ''); // removes the last syalash\n\n  const navIndex = navigationList.findIndex(item =>\n    item.path.includes(currentNavigationItem)\n  );\n\n  return {\n    prevCategory: navigationList[navIndex - 1],\n    nextCategory: navigationList[navIndex + 1],\n    navIndex,\n  };\n};\n\nconst getTitle = pageContext => {\n  if (!pageContext.frontmatter.title) {\n    return 'Home';\n  }\n  return slugify(pageContext.frontmatter.title, {\n    lower: true,\n  });\n};\n\nconst getName = (category, title) => `${category}${title ? `: ${title}` : ''}`;\n\nconst NextPreviousContainer = props => {\n  const {\n    tabs,\n    location,\n    pageContext = {\n      frontmatter: 'Home',\n    },\n  } = props;\n  const [navigationList, pathPrefix] = useNavigationList();\n  const currentTitle = getTitle(pageContext);\n  const hrefSegments = location.pathname\n    .replace(pathPrefix, '')\n    .split('/')\n    .filter(Boolean);\n\n  const { prevTabItem, nextTabItem } = getTabItems({\n    currentTitle,\n    location,\n    tabs,\n  });\n\n  const { prevCategory, nextCategory, navIndex } = useNavigationItems({\n    location,\n    tabs,\n  });\n\n  const getPreviousItem = () => {\n    if (prevTabItem) {\n      const previousSegments = [...hrefSegments.slice(0, -1), prevTabItem.slug];\n      return {\n        // Join the link back together\n        to: `/${previousSegments.join('/')}`,\n        name: getName(\n          navigationList[navIndex].title || navigationList[navIndex].category,\n          prevTabItem.title\n        ),\n      };\n    }\n\n    if (prevCategory) {\n      return {\n        to: prevCategory.path,\n        name: getName(prevCategory.category, prevCategory.title),\n      };\n    }\n\n    return currentTitle === 'Home'\n      ? {}\n      : {\n          to: '/',\n          name: 'Home',\n        };\n  };\n\n  const getNextItem = () => {\n    if (currentTitle === 'Home') {\n      return {\n        to: navigationList[navIndex].path,\n        name: getName(\n          navigationList[navIndex].category,\n          navigationList[navIndex].title\n        ),\n      };\n    }\n\n    if (nextTabItem && nextTabItem.slug) {\n      const nextSegments = [...hrefSegments.slice(0, -1), nextTabItem.slug];\n      return {\n        to: `/${nextSegments.join('/')}`,\n        name: getName(\n          navigationList[navIndex].title || navigationList[navIndex].category,\n          nextTabItem.title\n        ),\n      };\n    }\n\n    if (nextCategory) {\n      return {\n        to: nextCategory.path,\n        name: getName(nextCategory.category, nextCategory.title),\n      };\n    }\n\n    return {}; // final page\n  };\n\n  if (currentTitle !== 'Home' && !navigationList[navIndex]) {\n    return null;\n  }\n\n  return (\n    <NextPrevious previousItem={getPreviousItem()} nextItem={getNextItem()} />\n  );\n};\n\nexport default NextPreviousContainer;\n","import NextPrevious from './NextPrevious';\n\nexport default NextPrevious;\n","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  static propTypes = {\n    tabs: PropTypes.array,\n    slug: PropTypes.string,\n  };\n\n  render() {\n    const { tabs, slug } = this.props;\n    const currentTab = slug\n      .split('/')\n      .filter(Boolean)\n      .slice(-1)[0];\n\n    const pageTabs = tabs.map(tab => {\n      const slugifiedTab = slugify(tab, { lower: true });\n      const selected = slugifiedTab === currentTab;\n      const currentTabRegex = new RegExp(`${currentTab}(?!-)`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport BackToTopBtn from '../components/BackToTopBtn';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const { tabs, title, theme, description, keywords } = frontmatter;\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return slug.split('/').slice(-1)[0] || slugify(tabs[0], { lower: true });\n  };\n\n  const currentTab = getCurrentTab();\n  return (\n    <Layout\n      tabs={tabs}\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}\n    >\n      <PageHeader title={Title ? <Title /> : title} label=\"label\" tabs={tabs} />\n      {tabs && <PageTabs slug={slug} tabs={tabs} currentTab={currentTab} />}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <BackToTopBtn />\n    </Layout>\n  );\n};\n\nexport default Default;\n","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/boneskull/projects/boneskull/report-toolkit/packages/docs/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst Metadata = makeShortcode(\"Metadata\");\nconst AnchorLinks = makeShortcode(\"AnchorLinks\");\nconst AnchorLink = makeShortcode(\"AnchorLink\");\nconst InlineNotification = makeShortcode(\"InlineNotification\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <PageDescription mdxType=\"PageDescription\">\n      <p><strong parentName=\"p\"><Metadata prop=\"packageName\" mdxType=\"Metadata\" /></strong>{`’s behavior can be controlled via configuration file. This document serves as both a guide and configuration file format reference.`}</p>\n    </PageDescription>\n    <AnchorLinks mdxType=\"AnchorLinks\">\n  <AnchorLink mdxType=\"AnchorLink\">Do I Need a Configuration File?</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Configuration File Location and Naming</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Configuration File Format</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Configuration By Example</AnchorLink>\n  <AnchorLink to=\"#configuration-reference\" mdxType=\"AnchorLink\">\n    Configuration File Reference\n    <AnchorLinks small mdxType=\"AnchorLinks\">\n      <AnchorLink to=\"#commands-property\" mdxType=\"AnchorLink\">commands</AnchorLink>\n      <AnchorLink to=\"#rules-property\" mdxType=\"AnchorLink\">rules</AnchorLink>\n      <AnchorLink to=\"#transformers-property\" mdxType=\"AnchorLink\">transformers</AnchorLink>\n      <AnchorLink to=\"#plugins-property\" mdxType=\"AnchorLink\">plugins</AnchorLink>\n    </AnchorLinks>\n  </AnchorLink>\n    </AnchorLinks>\n    <h2>{`Do I Need a Configuration File?`}</h2>\n    <p>{`In general, you only need a configuration file if one of the following statements is true:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`You want to customize the behavior of built-in rules when using `}<inlineCode parentName=\"li\">{`inspect`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\">{`You want to use a custom rule with `}<inlineCode parentName=\"li\">{`inspect`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\">{`You want to configure one or more commands to `}<em parentName=\"li\">{`always`}</em>{` use a particular option (unless overridden by command-line flags).`}</li>\n      <li parentName=\"ul\">{`You want to configure alternative transformer defaults.`}</li>\n    </ul>\n    <p>{`If you have answered “no” to all of the above, then `}<strong parentName=\"p\">{`you don’t need a configuration file.`}</strong>{` Come back to this page if you ever do!`}</p>\n    <h2>{`Configuration File Location and Naming`}</h2>\n    <p>{`Unless `}<a parentName=\"p\" {...{\n        \"href\": \"/report-toolkit/cli#-rc-lesspathto.rtkrc.jsgreater\"\n      }}>{`given an explicit filepath`}</a>{` to a configuration file, `}<Metadata prop=\"executable\" mdxType=\"Metadata\" />{` will `}<em parentName=\"p\">{`search`}</em>{` for a configuration file. This section describes recommended locations (depending on use-case), and the places in which it will otherwise search.`}</p>\n    <h3>{`Recommended Locations`}</h3>\n    <p>{`For a configuration `}<strong parentName=\"p\">{`specific to a project`}</strong>{`, the recommended location is in the `}<strong parentName=\"p\">{`project root`}</strong>{` as `}<inlineCode parentName=\"p\">{`.rtkrc.js`}</inlineCode>{`, alongside `}<inlineCode parentName=\"p\">{`package.json`}</inlineCode>{` and your other dotfiles. Keep the configuration under version control.`}</p>\n    <p>{`For a configuration `}<strong parentName=\"p\">{`at the system level`}</strong>{`, the recommended location is the user’s `}<strong parentName=\"p\">{`home directory`}</strong>{` in `}<inlineCode parentName=\"p\">{`$HOME/.rtkrc.js`}</inlineCode>{`. The “user”, in this case, is the user executing `}<Metadata prop=\"executable\" mdxType=\"Metadata\" />{`; this is `}<em parentName=\"p\">{`not`}</em>{` the owner of the process which generated the Diagnostic Report file!`}</p>\n    <h3>{`Configuration Search Paths`}</h3>\n    <p>{`In addition to the `}<a parentName=\"p\" {...{\n        \"href\": \"#recommended-locations\"\n      }}>{`recommended locations`}</a>{`, `}<Metadata prop=\"packageName\" mdxType=\"Metadata\" />{` will search for a configuration file named `}<inlineCode parentName=\"p\">{`.rtkrc.js`}</inlineCode>{` (preferred) or `}<inlineCode parentName=\"p\">{`rtk.config.js`}</inlineCode>{` in the following order, choosing the first found:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`The current working directory`}</li>\n      <li parentName=\"ol\">{`The parent of the current working directory, and the grandparent, all the way up to the user’s `}<inlineCode parentName=\"li\">{`$HOME`}</inlineCode>{` directory `}<em parentName=\"li\">{`or`}</em>{` the filesystem root (whichever comes first)`}</li>\n      <li parentName=\"ol\">{`The user’s `}<inlineCode parentName=\"li\">{`$HOME`}</inlineCode>{` directory, if it is not an ancestor of the current working directory`}</li>\n      <li parentName=\"ol\">{`The subdirectory `}<inlineCode parentName=\"li\">{`etc/`}</inlineCode>{` of the result of `}<inlineCode parentName=\"li\">{`npm config prefix get`}</inlineCode>{` (e.g., `}<inlineCode parentName=\"li\">{`/usr/local/etc`}</inlineCode>{` or `}<inlineCode parentName=\"li\">{`$HOME/.nvm/versions/node/(version)/etc`}</inlineCode>{`)`}</li>\n      <li parentName=\"ol\">{`(If on a POSIX OS) `}<inlineCode parentName=\"li\">{`$XDG_CONFIG_HOME`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`$XDG_CONFIG_DIRS`}</inlineCode></li>\n      <li parentName=\"ol\">{`(If on a POSIX OS) `}<inlineCode parentName=\"li\">{`/etc`}</inlineCode></li>\n    </ol>\n    <p>{`Remember, if none of the above work for your use-case, you can always `}<a parentName=\"p\" {...{\n        \"href\": \"/report-toolkit/cli#-rc-lesspathto.rtkrc.jsgreater\"\n      }}>{`specify an explicit filepath`}</a>{`.`}</p>\n    <h2>{`Configuration File Format`}</h2>\n    <p>{`Many tools allow configuration in different file formats, including JSON, YAML, and JavaScript. `}<Metadata prop=\"packageName\" mdxType=\"Metadata\" />{` is not such a tool.`}</p>\n    <p><strong parentName=\"p\"><Metadata prop=\"packageName\" mdxType=\"Metadata\" />{` configuration files are JavaScript only.`}</strong></p>\n    <InlineNotification kind=\"warning\" mdxType=\"InlineNotification\">\n      <p>{`As of v0.5.1, EcmaScript modules are `}<em parentName=\"p\">{`not`}</em>{` supported for configuration files.`}</p>\n    </InlineNotification>\n    <p>{`There are benefits and drawbacks to this approach, of course, but choosing JavaScript means more power for the user, and easier parsing for `}<Metadata prop=\"packageName\" mdxType=\"Metadata\" />{`.`}</p>\n    <p>{`As for the `}<em parentName=\"p\">{`content`}</em>{` of the configuration file, it must:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Be written in JavaScript.`}</li>\n      <li parentName=\"ul\">{`Export an non-empty `}<inlineCode parentName=\"li\">{`Array`}</inlineCode>{` property named `}<inlineCode parentName=\"li\">{`config`}</inlineCode>{`.`}</li>\n    </ul>\n    <p>{`With that understood, let’s look at some examples.`}</p>\n    <h2>{`Configuration By Example`}</h2>\n    <p>{`We’ll start by looking at a minimal configuration example, then exploring the builtin “recommended” configuration, and finally learn how to customize it.`}</p>\n    <h3>{`Minimal Configuration Example`}</h3>\n    <p>{`The simplest configuration file is perhaps the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`exports.config = ['rtk:recommended'];\n`}</code></pre>\n    <p>{`This loads the built-in “recommended” configuration `}<em parentName=\"p\">{`by its alias`}</em>{`, `}<inlineCode parentName=\"p\">{`rtk:recommended`}</inlineCode>{`. `}<inlineCode parentName=\"p\">{`rtk:recommended`}</inlineCode>{` `}<em parentName=\"p\">{`also`}</em>{` happens to be the default configuration (if no config file is present), so the above is rather pointless.`}</p>\n    <p>{`The above can be expressed in an awkward, verbose way (which is what the alias is for):`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// don't do this!\nexports.config = [require('@report-toolkit/common/src/configs/recommended')];\n`}</code></pre>\n    <InlineNotification kind=\"info\" mdxType=\"InlineNotification\">\n      <p>{`As of v0.5.1, `}<inlineCode parentName=\"p\">{`rtk:recommended`}</inlineCode>{` is the `}<em parentName=\"p\">{`only`}</em>{` alias. Aliases are reserved for built-in configurations; they won’t work for any other “named” configuration.`}</p>\n    </InlineNotification>\n    <p>{`For an less-trivial example, let’s take a closer look at this `}<inlineCode parentName=\"p\">{`rtk:recommended`}</inlineCode>{` config.`}</p>\n    <h3>{`Basic Configuration Example`}</h3>\n    <p>{`This is the contents of the `}<inlineCode parentName=\"p\">{`rtk:recommended`}</inlineCode>{` config, which can serve as a basic\nexample:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\",\n        \"metastring\": \"file=./recommended.js.txt\",\n        \"file\": \"./recommended.js.txt\"\n      }}>{`/**\n * The \"recommended\" config, which can be referenced by its alias, \\`rtk:recommended\\`.\n * This is _also_ the _default_ config if no config file is used.\n * @type {import('../config').ConfigListItem[]}\n **/\nexports.config = [\n  {\n    rules: {\n      'cpu-usage': true,\n      'library-mismatch': true,\n      'long-timeout': true,\n      'memory-usage': true\n    }\n  }\n];\n\n/**\n * @type {import('../config').BuiltinConfigAliases}\n */\nexports.alias = 'rtk:recommended';\n`}</code></pre>\n    <p>{`The above configuration file has two exports; `}<inlineCode parentName=\"p\">{`config`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`alias`}</inlineCode>{`. The latter, `}<inlineCode parentName=\"p\">{`alias`}</inlineCode>{`, is reserved for built-in configurations—this is where the `}<inlineCode parentName=\"p\">{`rtk:recommended`}</inlineCode>{` name comes from; it can be safely ignored.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`config`}</inlineCode>{` export is always an array. In the case above, the array has a single object with a `}<inlineCode parentName=\"p\">{`rules`}</inlineCode>{` property. This property configures the Rules which the `}<a parentName=\"p\" {...{\n        \"href\": \"/report-toolkit/cli/#the-inspect-command\"\n      }}>{`inspect command`}</a>{` uses. The `}<em parentName=\"p\">{`keys`}</em>{` are Rule names, and the `}<em parentName=\"p\">{`values`}</em>{` are the corresponding Rule-specific configuration for each Rule.`}</p>\n    <p>{`While each Rule has its own set of options, we can use `}<inlineCode parentName=\"p\">{`true`}</inlineCode>{` to `}<em parentName=\"p\">{`enable the Rule and its default behavior`}</em>{`. Conversely, `}<inlineCode parentName=\"p\">{`false`}</inlineCode>{` will disable the Rule altogether.`}</p>\n    <p>{`In the `}<inlineCode parentName=\"p\">{`rtk:recommended`}</inlineCode>{` config, all four (4) the built-in rules are enabled with their defaults.`}</p>\n    <InlineNotification kind=\"warning\" mdxType=\"InlineNotification\">\n      <p>{`Note that `}<strong parentName=\"p\">{`if a configuration file is detected, all rules are disabled by default`}</strong>{`. This means that a config file must enable each. The most straightforward way to do this is to just use the `}<inlineCode parentName=\"p\">{`rtk:recommended`}</inlineCode>{` config.`}</p>\n    </InlineNotification>\n    <p>{`Next, we’ll learn how to build on top of the “recommended” config with our own configuration.`}</p>\n    <h3>{`Customizing the “Recommended” Configuration`}</h3>\n    <p>{`We’re going to customize the “recommended” configuration. Create an empty config file and call it `}<inlineCode parentName=\"p\">{`.rtkrc.js`}</inlineCode>{`—and place it in your current working directory (or project root, or even your user’s `}<inlineCode parentName=\"p\">{`$HOME`}</inlineCode>{` directory; for our purposes, this doesn’t matter, as long as `}<inlineCode parentName=\"p\">{`rtk`}</inlineCode>{` can find it):`}</p>\n    <p>{`Open `}<inlineCode parentName=\"p\">{`.rtkrc.js`}</inlineCode>{` in your favorite editor. Copy and paste this into it:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`exports.config = ['rtk.recommended'];\n`}</code></pre>\n    <p>{`It is no accident that the `}<inlineCode parentName=\"p\">{`config`}</inlineCode>{` property is an `}<inlineCode parentName=\"p\">{`Array`}</inlineCode>{`. `}<strong parentName=\"p\">{`Each item in the `}<inlineCode parentName=\"strong\">{`config`}</inlineCode>{` export is `}<em parentName=\"strong\">{`deeply merged`}</em>{` into the item before it.`}</strong>{` Kind of like the parameters to `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\"\n      }}><inlineCode parentName=\"a\">{`Object.assign()`}</inlineCode></a>{`—but a “deep” instead of “shallow” copy. In practical terms, we can override any given property within the `}<inlineCode parentName=\"p\">{`rtk.recommended`}</inlineCode>{` config by appending a `}<em parentName=\"p\">{`configuration object`}</em>{` to the `}<inlineCode parentName=\"p\">{`config`}</inlineCode>{` export.`}</p>\n    <p>{`Let’s take advantage of the deep merging, and configure the `}<inlineCode parentName=\"p\">{`cpu-usage`}</inlineCode>{` rule (which emits a message if the total CPU usage across all cores is not within a defined range) to increase its threshold from the default, 50%, to 75%.`}</p>\n    <p>{`Change your `}<inlineCode parentName=\"p\">{`.rtkrc.js`}</inlineCode>{` to the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`exports.config = [\n  'rtk.recommended',\n  {\n    rules: {\n      'cpu-usage': {\n        enabled: true,\n        max: 75\n      }\n    }\n  }\n];\n`}</code></pre>\n    <p>{`Internally, the merge of our configuration object (the second item in `}<inlineCode parentName=\"p\">{`exports.config`}</inlineCode>{`) into the `}<inlineCode parentName=\"p\">{`rtk:recommended`}</inlineCode>{` config results in a final object that looks somewhat like this:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// This is just for purposes of illustration, and is not a configuration file!\nlet config = {\n  rules: {\n    'cpu-usage': {\n      enabled: true,\n      max: 75\n    },\n    'library-mismatch': true,\n    'long-timeout': true,\n    'memory-usage': true\n  }\n};\n`}</code></pre>\n    <p>{`Now, when you run `}<inlineCode parentName=\"p\">{`rtk inspect <report-file>`}</inlineCode>{`, the `}<inlineCode parentName=\"p\">{`cpu-usage`}</inlineCode>{` rule won’t emit a Message unless the total CPU usage in the report is at or above 75%.`}</p>\n    <h3>{`Using a Shared Configuration`}</h3>\n    <p>{`A `}<em parentName=\"p\">{`shared`}</em>{` configuration is essentially `}<em parentName=\"p\">{`some other config file`}</em>{`. The “recommended” config is a shared configuration. Recall that, instead of using the `}<inlineCode parentName=\"p\">{`rtk:recommended`}</inlineCode>{` alias, we could `}<inlineCode parentName=\"p\">{`require()`}</inlineCode>{` it instead. The previous example config could be rewritten as:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`exports.config = [\n  require('@report-toolkit/common/src/configs/recommended'),\n  {\n    rules: {\n      'cpu-usage': {\n        enabled: true,\n        max: 75\n      }\n    }\n  }\n];\n`}</code></pre>\n    <p>{`Of course, that’s tedious; hence the `}<inlineCode parentName=\"p\">{`rtk:recommended`}</inlineCode>{` alias. But the idea is still applicable: `}<strong parentName=\"p\">{`you can include any other config file via `}<inlineCode parentName=\"strong\">{`require()`}</inlineCode>{`.`}</strong>{` Perhaps you have a custom config that you wish to share with your team. For example, you could create a package called `}<inlineCode parentName=\"p\">{`report-toolkit-config-pork-chop-sandwich`}</inlineCode>{` and publish it to npm. This package would contain an `}<inlineCode parentName=\"p\">{`index.js`}</inlineCode>{`, which would just be a regular `}<inlineCode parentName=\"p\">{`report-toolkit`}</inlineCode>{` config file (containing a `}<inlineCode parentName=\"p\">{`config`}</inlineCode>{` export). You can then install it into your project, and use it like so:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`exports.config = [\n  'rtk:recommended',\n  require('report-toolkit-config-pork-chop-sandwich'),\n  {\n    rules: {\n      // customize report-toolkit-pork-chop-sandwich further\n    }\n  }\n];\n`}</code></pre>\n    <p>{`All three config objects will be merged together, with priority in ascending order.`}</p>\n    <InlineNotification kind=\"info\" mdxType=\"InlineNotification\">\n      <p>{`Because config files are JavaScript, you can easily add logic to them. For example, you may want to change the behavior of a particular rule if a certain environment variable is set by looking at `}<inlineCode parentName=\"p\">{`process.env`}</inlineCode>{`. Go wild!`}</p>\n    </InlineNotification>\n    <p>{`This covers the basics of using configuration files. The next section is a reference of the allowed configuration properties.`}</p>\n    <h2>{`Configuration Reference`}</h2>\n    <h3>{`Exports`}</h3>\n    <p>{`A configuration file has a single export: `}<inlineCode parentName=\"p\">{`config`}</inlineCode>{`.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`config`}</inlineCode>{` export be an `}<inlineCode parentName=\"p\">{`Array`}</inlineCode>{` of `}<a parentName=\"p\" {...{\n        \"href\": \"#config-objects\"\n      }}><em parentName=\"a\">{`config objects`}</em></a>{` or `}<inlineCode parentName=\"p\">{`string`}</inlineCode>{`s corresponding to builtin aliases.`}</p>\n    <InlineNotification kind=\"info\" mdxType=\"InlineNotification\">\n      <p>{`As of v0.5.1, `}<inlineCode parentName=\"p\">{`rtk:recommended`}</inlineCode>{` is the `}<em parentName=\"p\">{`only`}</em>{` builtin alias.`}</p>\n    </InlineNotification>\n    <p>{`Order matters; subsequent items will be deeply merged into previous items, overriding their settings.`}</p>\n    <h3>{`Config Objects`}</h3>\n    <p>{`A `}<em parentName=\"p\">{`config object`}</em>{` is an object containing zero or more of the following properties:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#commands-property\"\n        }}><inlineCode parentName=\"a\">{`commands`}</inlineCode></a>{`: An object containing keys corresponding to `}<em parentName=\"li\">{`Command`}</em>{` names, and values of Command-specific defaults.`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#plugins-property\"\n        }}><inlineCode parentName=\"a\">{`plugins`}</inlineCode></a>{`: An array of `}<em parentName=\"li\">{`Plugins`}</em>{`.`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#rules-property\"\n        }}><inlineCode parentName=\"a\">{`rules`}</inlineCode></a>{`: An object containing keys corresponding to `}<em parentName=\"li\">{`Rule`}</em>{` names, and values of Rule-specific options.`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#transformers-property\"\n        }}><inlineCode parentName=\"a\">{`transformers`}</inlineCode></a>{`: An object containing keys corresponding to `}<em parentName=\"li\">{`Transformer`}</em>{` names, and values of Transformer-specific defaults.`}</li>\n    </ul>\n    <p>{`When you `}<inlineCode parentName=\"p\">{`require()`}</inlineCode>{` another config file, you’re requiring a module with a `}<inlineCode parentName=\"p\">{`config`}</inlineCode>{` export. This means that the following property is supported, but not used directly:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`config`}</inlineCode>{`: Contains a config object.`}</li>\n    </ul>\n    <p>{`The contents of `}<a parentName=\"p\" {...{\n        \"href\": \"#commands-property\"\n      }}><inlineCode parentName=\"a\">{`commands`}</inlineCode></a>{`, `}<a parentName=\"p\" {...{\n        \"href\": \"#plugins-property\"\n      }}><inlineCode parentName=\"a\">{`plugins`}</inlineCode></a>{`, `}<a parentName=\"p\" {...{\n        \"href\": \"#rules-property\"\n      }}><inlineCode parentName=\"a\">{`rules`}</inlineCode></a>{`, and `}<a parentName=\"p\" {...{\n        \"href\": \"#transformers-property\"\n      }}><inlineCode parentName=\"a\">{`transformers`}</inlineCode></a>{` are described below.`}</p>\n    <h4><inlineCode parentName=\"h4\">{`commands`}</inlineCode>{` Property`}</h4>\n    <p>{`A `}<em parentName=\"p\">{`Command`}</em>{` is an `}<a parentName=\"p\" {...{\n        \"href\": \"/report-toolkit/cli/#available-commands\"\n      }}><inlineCode parentName=\"a\">{`rtk`}</inlineCode>{` command`}</a>{`. Use the `}<inlineCode parentName=\"p\">{`commands`}</inlineCode>{` property to change the default behavior of one or more Commands.`}</p>\n    <p>{`Allowed keys are the supported command names:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`diff`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`inspect`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`redact`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`transform`}</inlineCode></li>\n    </ul>\n    <p>{`Allowed properties of each are described below; these correspond to the allowed options for the particular command. In addition, properties corresponding to `}<a parentName=\"p\" {...{\n        \"href\": \"/report-toolkit/cli/#global-options\"\n      }}>{`global options`}</a>{` are allowed.`}</p>\n    <InlineNotification kind=\"info\" mdxType=\"InlineNotification\">\n      <p>{`You can derive the name of any property from the command-line options. For example, the global `}<inlineCode parentName=\"p\">{`--verbose`}</inlineCode>{` option is a boolean flag. To make this the default behavior for a given command, use `}<inlineCode parentName=\"p\">{`{verbose: true}`}</inlineCode>{`.`}</p>\n      <p>{`You can use camelCase or dashes, where applicable; e.g., `}<inlineCode parentName=\"p\">{`--max-width=50`}</inlineCode>{` could be represented as `}<inlineCode parentName=\"p\">{`{'max-width': 50}`}</inlineCode>{` `}<em parentName=\"p\">{`or`}</em>{` `}<inlineCode parentName=\"p\">{`{maxWidth: 50}`}</inlineCode>{`.`}</p>\n    </InlineNotification>\n    <h5><inlineCode parentName=\"h5\">{`commands.diff`}</inlineCode>{` Properties`}</h5>\n    <p>{`If present in a `}<inlineCode parentName=\"p\">{`commands.diff`}</inlineCode>{` object, these properties will influence the default behavior of `}<inlineCode parentName=\"p\">{`rtk diff`}</inlineCode>{`. Command-line arguments will have precedence over these defaults.`}</p>\n    <p>{`For more information on these options, please see the `}<a parentName=\"p\" {...{\n        \"href\": \"/report-toolkit/cli/#diff-options\"\n      }}>{`docs for `}<inlineCode parentName=\"a\">{`diff`}</inlineCode>{`’s options`}</a>{`.`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\"><inlineCode parentName=\"strong\">{`includeProp`}</inlineCode></strong>{` `}<inlineCode parentName=\"li\">{`{string|string[]}`}</inlineCode>{`: One or more properties in “dot notation” (e.g., `}<inlineCode parentName=\"li\">{`header.nodeJsVersion`}</inlineCode>{`) to include.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\"><inlineCode parentName=\"strong\">{`excludeProp`}</inlineCode></strong>{` `}<inlineCode parentName=\"li\">{`{string|string[]}`}</inlineCode>{`: One or more properties in “dot notation” to (e.g., `}<inlineCode parentName=\"li\">{`header.nodeJsVersion`}</inlineCode>{`) exclude.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\"><inlineCode parentName=\"strong\">{`all`}</inlineCode></strong>{` `}<inlineCode parentName=\"li\">{`{boolean}`}</inlineCode>{`: If `}<inlineCode parentName=\"li\">{`true`}</inlineCode>{`, include `}<em parentName=\"li\">{`all`}</em>{` properties in a diff.`}</li>\n    </ul>\n    <p>{`Also included are the `}<a parentName=\"p\" {...{\n        \"href\": \"#common-output-properties\"\n      }}>{`common output properties`}</a>{`.`}</p>\n    <h5><inlineCode parentName=\"h5\">{`commands.inspect`}</inlineCode>{` Properties`}</h5>\n    <p>{`If present in a `}<inlineCode parentName=\"p\">{`commands.inspect`}</inlineCode>{` object, these properties will influence the default behavior of `}<inlineCode parentName=\"p\">{`rtk inspect`}</inlineCode>{`. Command-line arguments will have precedence over these defaults.`}</p>\n    <p>{`For more information on these options, please see the `}<a parentName=\"p\" {...{\n        \"href\": \"/report-toolkit/cli/#inspect-options\"\n      }}>{`docs for `}<inlineCode parentName=\"a\">{`inspect`}</inlineCode>{`’s options`}</a>{`.`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\"><inlineCode parentName=\"strong\">{`severity`}</inlineCode></strong>{` `}<inlineCode parentName=\"li\">{`{\"error\"|\"warning\"|\"info\"}`}</inlineCode>{`: Minimum severity level of a Message to display. The default is `}<inlineCode parentName=\"li\">{`warning`}</inlineCode>{`.`}</li>\n    </ul>\n    <p>{`Also included are the `}<a parentName=\"p\" {...{\n        \"href\": \"#common-output-properties\"\n      }}>{`common output properties`}</a>{`.`}</p>\n    <h5><inlineCode parentName=\"h5\">{`commands.redact`}</inlineCode>{` Properties`}</h5>\n    <p>{`If present in a `}<inlineCode parentName=\"p\">{`commands.redact`}</inlineCode>{` object, these properties will influence the default behavior of `}<inlineCode parentName=\"p\">{`rtk redact`}</inlineCode>{`. Command-line arguments will have precedence over these defaults.`}</p>\n    <p>{`For more information on these options, please see the `}<a parentName=\"p\" {...{\n        \"href\": \"/report-toolkit/cli/#redact-options\"\n      }}>{`docs for `}<inlineCode parentName=\"a\">{`redact`}</inlineCode>{`’s options`}</a>{`.`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\"><inlineCode parentName=\"strong\">{`replace`}</inlineCode></strong>{` `}<inlineCode parentName=\"li\">{`{boolean}`}</inlineCode>{`: If `}<inlineCode parentName=\"li\">{`true`}</inlineCode>{`, overwrite report file in place.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\"><inlineCode parentName=\"strong\">{`pretty`}</inlineCode></strong>{` `}<inlineCode parentName=\"li\">{`{boolean}`}</inlineCode>{`: If `}<inlineCode parentName=\"li\">{`false`}</inlineCode>{`, do not output pretty-printed JSON. Defaults to `}<inlineCode parentName=\"li\">{`true`}</inlineCode>{`.`}</li>\n    </ul>\n    <h5><inlineCode parentName=\"h5\">{`command.transform`}</inlineCode>{` Properties`}</h5>\n    <p><strong parentName=\"p\">{`Note: these settings apply only to the `}<inlineCode parentName=\"strong\">{`transform`}</inlineCode>{` command.`}</strong>{` To change default transformer behavior across `}<em parentName=\"p\">{`all`}</em>{` commands, use the `}{`[`}<inlineCode parentName=\"p\">{`transformers`}</inlineCode>{` config property]`}{`.`}</p>\n    <p>{`If present in a `}<inlineCode parentName=\"p\">{`commands.transform`}</inlineCode>{` object, these properties will influence the default behavior of `}<inlineCode parentName=\"p\">{`rtk transform`}</inlineCode>{`. Command-line arguments will have precedence over these defaults.`}</p>\n    <p><inlineCode parentName=\"p\">{`commands.transform`}</inlineCode>{` has no unique properties in addition to `}<a parentName=\"p\" {...{\n        \"href\": \"#common-output-properties\"\n      }}>{`the common output properties`}</a>{`.`}</p>\n    <h5>{`Common Output Properties`}</h5>\n    <p>{`These properties can be used within `}<inlineCode parentName=\"p\">{`commands.diff`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`commands.inspect`}</inlineCode>{`, and `}<inlineCode parentName=\"p\">{`commands.transform`}</inlineCode>{`. They influence the default behavior, and command-line arguments will have precedence over these.`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\"><inlineCode parentName=\"strong\">{`output`}</inlineCode></strong>{` `}<inlineCode parentName=\"li\">{`{string}`}</inlineCode>{`: Write output to file instead of `}<inlineCode parentName=\"li\">{`STDOUT`}</inlineCode>{`. Be sure this is what you really want!`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\"><inlineCode parentName=\"strong\">{`show-secrets-unsafe`}</inlineCode></strong>{` `}<inlineCode parentName=\"li\">{`{boolean}`}</inlineCode>{`: If `}<inlineCode parentName=\"li\">{`true`}</inlineCode>{`, do `}<em parentName=\"li\">{`not`}</em>{` redact secrets. Careful!`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\"><inlineCode parentName=\"strong\">{`transform`}</inlineCode></strong>{` {string}: Use a transformer. Read more about the `}<a parentName=\"li\" {...{\n          \"href\": \"/report-toolkit/cli/#-transform-lesstransformergreater-t-lesstransformergreater\"\n        }}>{`allowed transformers`}</a>{`.`}</li>\n    </ul>\n    <p>{`Also allowed are transformer-specific options, which are equivalent to the `}<a parentName=\"p\" {...{\n        \"href\": \"/report-toolkit/cli/#transformer-specific-options\"\n      }}>{`list of those available`}</a>{` in the CLI.`}</p>\n    <h4><inlineCode parentName=\"h4\">{`transformers`}</inlineCode>{` Property`}</h4>\n    <p>{`This property allows default transformer behavior to be set “globally”. For instance, if you’d like to `}<em parentName=\"p\">{`not`}</em>{` pretty-print JSON when using the `}<inlineCode parentName=\"p\">{`json`}</inlineCode>{` transformer (with `}<em parentName=\"p\">{`any`}</em>{` command), use `}<inlineCode parentName=\"p\">{`transformers`}</inlineCode>{` to configure this.`}</p>\n    <p>{`Each key in this property corresponds to a `}<a parentName=\"p\" {...{\n        \"href\": \"/report-toolkit/cli/#-transform-lesstransformergreater-t-lesstransformergreater\"\n      }}>{`transformer name`}</a>{`. The value is an object corresponding to the `}<a parentName=\"p\" {...{\n        \"href\": \"/report-toolkit/cli/#transformer-specific-options\"\n      }}>{`transformer-specific options`}</a>{` for the transformer.`}</p>\n    <p>{`The example above can be expressed as:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`{\n  transformers: {\n    json: {\n      pretty: false;\n    }\n  }\n}\n`}</code></pre>\n    <p>{`Command-specific transformer configuration has precedence over this “global” configuration. For example, you can re-enable `}<inlineCode parentName=\"p\">{`pretty`}</inlineCode>{` for `}<inlineCode parentName=\"p\">{`redact`}</inlineCode>{`, while remaining disabled for all other commands:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`{\n  transformers: {\n    json: {\n      pretty: false\n    }\n  },\n  commands: {\n    redact: {\n      pretty: true\n    }\n  }\n}\n`}</code></pre>\n    <h3><inlineCode parentName=\"h3\">{`rules`}</inlineCode>{` Property`}</h3>\n    <p>{`The `}<inlineCode parentName=\"p\">{`rules`}</inlineCode>{` property allows configuration of Rule behavior (used with the `}<inlineCode parentName=\"p\">{`inspect`}</inlineCode>{` command).`}</p>\n    <p>{`This property is an object where the keys correspond to a Rule identifier. Each Rule—builtin or custom—has a unique identifier. The builtin Rule identifiers are:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#cpu-usage-options\"\n        }}><inlineCode parentName=\"a\">{`cpu-usage`}</inlineCode></a>{`: Assert CPU usage % is within a range`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#library-mismatch-options\"\n        }}><inlineCode parentName=\"a\">{`library-mismatch`}</inlineCode></a>{`: Identify potential shared library version mismatches`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#long-timeout-options\"\n        }}><inlineCode parentName=\"a\">{`long-timeout`}</inlineCode></a>{`: Warn about far-future callbacks in timeout queue`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#memory-usage-options\"\n        }}><inlineCode parentName=\"a\">{`memory-usage`}</inlineCode></a>{`: Assert memory usage % is within a range`}</li>\n    </ul>\n    <h4><inlineCode parentName=\"h4\">{`cpu-usage`}</inlineCode>{` Options`}</h4>\n    <p>{`The `}<inlineCode parentName=\"p\">{`cpu-usage`}</inlineCode>{` Rule checks if the total CPU usage is within an allowed range. The total CPU usage is calculated `}<em parentName=\"p\">{`across all cores`}</em>{`. Besides the obvious, it also supports a `}<em parentName=\"p\">{`minimum`}</em>{` value, which can surface issues with processes that `}<em parentName=\"p\">{`should`}</em>{` be using cycles, but aren’t.`}</p>\n    <p><inlineCode parentName=\"p\">{`cpu-usage`}</inlineCode>{` can check the aggregate of multiple reports.`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`max`}</inlineCode>{` `}<inlineCode parentName=\"li\">{`{integer}`}</inlineCode>{`: Maximum allowed CPU usage, used as a percentage. Default is `}<inlineCode parentName=\"li\">{`50`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`min`}</inlineCode>{` `}<inlineCode parentName=\"li\">{`{integer}`}</inlineCode>{`: Minimum allowed CPU usage, used as a percentage. Default is `}<inlineCode parentName=\"li\">{`0`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`mode`}</inlineCode>{` `}<inlineCode parentName=\"li\">{`{\"mean\"|\"min\"|\"max\"|\"all\"}`}</inlineCode>{`: One of four different modes:`}<ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`mean`}</inlineCode>{`: Check the mean CPU usage across all reports. Default.`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`min`}</inlineCode>{`: Check the minimum CPU usage found across all reports.`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`max`}</inlineCode>{`: Check the maximum CPU usage found across all reports.`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`all`}</inlineCode>{`: Check `}<em parentName=\"li\">{`each report individually`}</em>{` for CPU usage in the allowed range.`}</li>\n        </ul></li>\n    </ul>\n    <h4><inlineCode parentName=\"h4\">{`library-mismatch`}</inlineCode>{` Options`}</h4>\n    <p>{`The `}<inlineCode parentName=\"p\">{`library-mismatch`}</inlineCode>{` Rule checks the shared libraries in use vs. what libraries Node.js was compiled with. A version mismatch can cause unexpected behavior.`}</p>\n    <p><inlineCode parentName=\"p\">{`library-mismatch`}</inlineCode>{` checks a single report at a time.`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`ignore`}</inlineCode>{` `}<inlineCode parentName=\"li\">{`{string}[]`}</inlineCode>{`: One (1) or more components (as found in the keys of `}<inlineCode parentName=\"li\">{`header.componentVersions`}</inlineCode>{`) to ignore; mismatches will not be reported for these libraries.`}</li>\n    </ul>\n    <h4><inlineCode parentName=\"h4\">{`long-timeout`}</inlineCode>{` Options`}</h4>\n    <p>{`The `}<inlineCode parentName=\"p\">{`long-timeout`}</inlineCode>{` Rule checks for suspicious callbacks waiting in the event loop. These can cause a program to keep running when it was expected to exit.`}</p>\n    <p><inlineCode parentName=\"p\">{`long-timeout`}</inlineCode>{` checks a single report at a time.`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`timeout`}</inlineCode>{` `}<inlineCode parentName=\"li\">{`{integer|string}`}</inlineCode>{`: A number (in milliseconds) or shorthand string representation of time, e.g., `}<inlineCode parentName=\"li\">{`1s`}</inlineCode>{`. See `}<a parentName=\"li\" {...{\n          \"href\": \"https://npm.im/ms\"\n        }}>{`the ms package`}</a>{` for formatting of strings. An active timeout in the event loop waiting at least this long will cause the Rule to emit. Default timeout is ten (10) seconds.`}</li>\n    </ul>\n    <h4><inlineCode parentName=\"h4\">{`memory-usage`}</inlineCode>{` Options`}</h4>\n    <p>{`The `}<inlineCode parentName=\"p\">{`memory`}</inlineCode>{` Rule checks the memory usage is within a range.`}</p>\n    <p><inlineCode parentName=\"p\">{`memory-usage`}</inlineCode>{` can check the aggregate of multiple reports.`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`max`}</inlineCode>{` `}<inlineCode parentName=\"li\">{`{integer}`}</inlineCode>{`: Maximum allowed memory usage, used as a percentage. Default is `}<inlineCode parentName=\"li\">{`50`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`min`}</inlineCode>{` `}<inlineCode parentName=\"li\">{`{integer}`}</inlineCode>{`: Minimum allowed memory usage, used as a percentage. Default is `}<inlineCode parentName=\"li\">{`0`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`mode`}</inlineCode>{` `}<inlineCode parentName=\"li\">{`{\"mean\"|\"min\"|\"max\"|\"all\"}`}</inlineCode>{`: One of four different modes:`}<ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`mean`}</inlineCode>{`: Check the mean memory usage across all reports. Default.`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`min`}</inlineCode>{`: Check the minimum memory usage found across all reports.`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`max`}</inlineCode>{`: Check the maximum memory usage found across all reports.`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`all`}</inlineCode>{`: Check `}<em parentName=\"li\">{`each report individually`}</em>{` for memory usage in the allowed range.`}</li>\n        </ul></li>\n    </ul>\n    <h3><inlineCode parentName=\"h3\">{`plugins`}</inlineCode>{` Property`}</h3>\n    <p>{`This property is a list of third-party plugins. The `}<inlineCode parentName=\"p\">{`@report-toolkit/inspector`}</inlineCode>{` “plugin” (which provides the builtin Rules) is always loaded. This does not imply all rules are enabled, however!`}</p>\n    <p>{`Example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`{\n  plugins: ['@bigco/big-report-toolkit-plugin'];\n}\n`}</code></pre>\n    <p>{`Plugins will be resolved from the current working directory. Try `}<inlineCode parentName=\"p\">{`require.resolve('my-plugin')`}</inlineCode>{` or an absolute path if you’re having trouble.`}</p>\n    <p><em parentName=\"p\">{`TODO: Document how to write a plugin!`}</em></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}